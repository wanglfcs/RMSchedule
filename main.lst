                                                        // BEEHIVE GCC 2010.07.09.18.09  (no pre-modify) (mult)
                                                        // ------------------------------------------------------------
                                                        // Standard as definitions
                                                        
$0                                                      zero = $0    // fixed zero
$0                                                      void = $0    // void destination
$1                                                      r1 = $1      // function return value
$2                                                      r2 = $2      // not callee save
$3                                                      r3 = $3      // not callee save, function argument 1
$4                                                      r4 = $4      // not callee save, function argument 2
$5                                                      r5 = $5      // not callee save, function argument 3
$6                                                      r6 = $6      // not callee save, function argument 4
$7                                                      r7 = $7      // not callee save, function argument 5
$8                                                      r8 = $8      // not callee save, function argument 6
$9                                                      r9 = $9      // callee save
$10                                                     r10 = $10    // callee save
$11                                                     r11 = $11    // callee save
$12                                                     r12 = $12    // callee save
$13                                                     r13 = $13    // callee save
$14                                                     r14 = $14    // callee save
$15                                                     r15 = $15    // callee save
$16                                                     r16 = $16    // callee save
$17                                                     r17 = $17    // callee save
$18                                                     r18 = $18    // callee save
$19                                                     r19 = $19    // callee save
$20                                                     r20 = $20    // callee save
$21                                                     r21 = $21    // callee save
$22                                                     r22 = $22    // callee save
$23                                                     fp = $23     // callee save, frame pointer
$24                                                     t1 = $24     // not callee save, temporary 1, not avail for reg alloc
$25                                                     t2 = $25     // not callee save, temporary 2, not avail for reg alloc
$26                                                     t3 = $26     // not callee save, temporary 3, not avail for reg alloc
$27                                                     p1 = $27     // not callee save, platform 1, not avail for reg alloc
$28                                                     sp = $28     // callee save, stack pointer
$29                                                     vb = $29     // not callee save, rw & rb only, not avail for reg alloc
                                                        
  00000000                                                  .assume   zero,0
                                                        
                                                        // ------------------------------------------------------------
                                                                .file   "main.c"
                                                                .data
                                                                .alignw 1
                                                                .type   _rs232, @object
                                                                .size   _rs232, 4
D 00000000                                              _rs232:
D 00000000 00000002                                             .long   2
                                                                .alignw 1
                                                                .type   _cycleCounter, @object
                                                                .size   _cycleCounter, 4
D 00000004                                              _cycleCounter:
D 00000004 00000022                                             .long   34
                                                                .alignw 1
                                                                .type   _multiplier, @object
                                                                .size   _multiplier, 4
D 00000008                                              _multiplier:
D 00000008 00000006                                             .long   6
                                                                .alignw 1
                                                                .type   _miscIO, @object
                                                                .size   _miscIO, 4
D 0000000c                                              _miscIO:
D 0000000c 0000000a                                             .long   10
                                                                .alignw 1
                                                                .type   _cacheControl, @object
                                                                .size   _cacheControl, 4
D 00000010                                              _cacheControl:
D 00000010 0000000e                                             .long   14
                                                                .alignw 1
                                                                .type   _msgControl, @object
                                                                .size   _msgControl, 4
D 00000014                                              _msgControl:
D 00000014 00000012                                             .long   18
                                                                .alignw 1
                                                                .type   _semaControl, @object
                                                                .size   _semaControl, 4
D 00000018                                              _semaControl:
D 00000018 00000016                                             .long   22
                                                                .code
                                                                .alignw 1
                                                                .type   _corenum, @function
C 00000000                                              _corenum:
C 00000000 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000001 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000002 e7001245  $28 = $28 SUB 00000004                     sub         sp,sp,4
C 00000003 e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 00000004 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 00000005 e5c00205  $23 = $28 ADD 00000000                     add         fp,sp,0
C 00000006 00000003* LINK = 00000000                            aqr_long_ld vb,_rs232
C 00000007 f7400307* AQR = $29 = LINK OR 00000000       
C 00000008 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000009 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 0000000a e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000000b 08540300  $1 = $1 OR 00000000 LSR 10                 lsr         r1,r1,10
C 0000000c 08403e85  $1 = $1 AND 0000000f                       and         r1,r1,15
C 0000000d bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 0000000e e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 0000000f edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 00000010 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 00000011 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000012 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _corenum, .-_corenum
                                                                .alignw 1
                                                                .type   _enetCorenum, @function
C 00000013                                              _enetCorenum:
C 00000013 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000014 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000015 e7001245  $28 = $28 SUB 00000004                     sub         sp,sp,4
C 00000016 e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 00000017 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 00000018 e5c00205  $23 = $28 ADD 00000000                     add         fp,sp,0
C 00000019 00000003* LINK = 00000000                            aqr_long_ld vb,_rs232
C 0000001a f7400307* AQR = $29 = LINK OR 00000000       
C 0000001b e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000001c 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 0000001d e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000001e 085c0300  $1 = $1 OR 00000000 LSR 14                 lsr         r1,r1,14
C 0000001f 08403e85  $1 = $1 AND 0000000f                       and         r1,r1,15
C 00000020 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 00000021 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 00000022 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 00000023 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 00000024 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000025 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _enetCorenum, .-_enetCorenum
                                                                .alignw 1
                                                                .type   _clockFrequency, @function
C 00000026                                              _clockFrequency:
C 00000026 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000027 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000028 e7001245  $28 = $28 SUB 00000004                     sub         sp,sp,4
C 00000029 e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 0000002a bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 0000002b e5c00205  $23 = $28 ADD 00000000                     add         fp,sp,0
C 0000002c 00000003* LINK = 00000000                            aqr_long_ld vb,_rs232
C 0000002d f7400307* AQR = $29 = LINK OR 00000000       
C 0000002e e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000002f 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 00000030 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000031 08640300  $1 = $1 OR 00000000 LSR 18                 lsr         r1,r1,18
C 00000032 0841fe85  $1 = $1 AND 0000007f                       and         r1,r1,127
C 00000033 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 00000034 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 00000035 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 00000036 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 00000037 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000038 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _clockFrequency, .-_clockFrequency
                                                                .alignw 1
                                                                .type   _waitRS232Out, @function
C 00000039                                              _waitRS232Out:
C 00000039 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 0000003a f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 0000003b e7001245  $28 = $28 SUB 00000004                     sub         sp,sp,4
C 0000003c e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 0000003d bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 0000003e e5c00205  $23 = $28 ADD 00000000                     add         fp,sp,0
C 0000003f                                              .L8:
C 0000003f 00000003* LINK = 00000000                            aqr_long_ld vb,_rs232
C 00000040 f7400307* AQR = $29 = LINK OR 00000000       
C 00000041 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000042 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 00000043 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000044 08480285  $1 = $1 AND 00000200                       and         r1,r1,512
C 00000045 0f400245  $29 = $1 SUB 00000000                      sub         vb,r1,0
C 00000046 f8001e4a  JZ PC SUB 00000007                         jz          .L8
C 00000047 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 00000048 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 00000049 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 0000004a e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 0000004b e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 0000004c e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _waitRS232Out, .-_waitRS232Out
                                                                .alignw 1
                                                                .type   _releaseRS232, @function
C 0000004d                                              _releaseRS232:
C 0000004d e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 0000004e f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 0000004f e7001245  $28 = $28 SUB 00000004                     sub         sp,sp,4
C 00000050 e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 00000051 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 00000052 e5c00205  $23 = $28 ADD 00000000                     add         fp,sp,0
C 00000053 00000003* LINK = 00000000                            aqr_long_ld vb,_miscIO
C 00000054 f7403307* AQR = $29 = LINK OR 0000000c       
C 00000055 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000056 0f400306  AQW = $29 = $1 OR 00000000                 aqw_ld      vb,r1
C 00000057 07c00605  WQ = $31 = $0 ADD 00000001                 ld          wq,1
C 00000058 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 00000059 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 0000005a edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 0000005b e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 0000005c e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 0000005d e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _releaseRS232, .-_releaseRS232
                                                                .alignw 1
                                                                .type   _message_srce, @function
C 0000005e                                              _message_srce:
C 0000005e e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 0000005f f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000060 e7002245  $28 = $28 SUB 00000008                     sub         sp,sp,8
C 00000061 e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 00000062 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 00000063 e5c01205  $23 = $28 ADD 00000004                     add         fp,sp,4
C 00000064 bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 00000065 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 00000066 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 00000067 e8540300  $1 = RQ OR 00000000 LSR 10                 lsr         r1,rq,10
C 00000068 08403e85  $1 = $1 AND 0000000f                       and         r1,r1,15
C 00000069 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 0000006a e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 0000006b edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 0000006c e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 0000006d e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 0000006e e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _message_srce, .-_message_srce
                                                                .alignw 1
                                                                .type   _message_type, @function
C 0000006f                                              _message_type:
C 0000006f e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000070 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000071 e7002245  $28 = $28 SUB 00000008                     sub         sp,sp,8
C 00000072 e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 00000073 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 00000074 e5c01205  $23 = $28 ADD 00000004                     add         fp,sp,4
C 00000075 bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 00000076 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 00000077 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 00000078 e84c0300  $1 = RQ OR 00000000 LSR 6                  lsr         r1,rq,6
C 00000079 08403e85  $1 = $1 AND 0000000f                       and         r1,r1,15
C 0000007a bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 0000007b e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 0000007c edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 0000007d e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 0000007e e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 0000007f e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _message_type, .-_message_type
                                                                .alignw 1
                                                                .type   _message_len, @function
C 00000080                                              _message_len:
C 00000080 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000081 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000082 e7002245  $28 = $28 SUB 00000008                     sub         sp,sp,8
C 00000083 e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 00000084 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 00000085 e5c01205  $23 = $28 ADD 00000004                     add         fp,sp,4
C 00000086 bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 00000087 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 00000088 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 00000089 e840fe85  $1 = RQ AND 0000003f                       and         r1,rq,63
C 0000008a bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 0000008b e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 0000008c edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 0000008d e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 0000008e e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 0000008f e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _message_len, .-_message_len
                                                                .alignw 1
                                                                .type   _icSleep, @function
C 00000090                                              _icSleep:
C 00000090 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000091 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000092 e7004245  $28 = $28 SUB 00000010                     sub         sp,sp,16
C 00000093 e7403206  AQW = $29 = $28 ADD 0000000c               aqw_add     vb,sp,12
C 00000094 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 00000095 e5c03205  $23 = $28 ADD 0000000c                     add         fp,sp,12
C 00000096 bf402246  AQW = $29 = $23 SUB 00000008               aqw_sub     vb,fp,8
C 00000097 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 00000098 00000003* LINK = 00000000                            aqr_long_ld vb,_cycleCounter
C 00000099 f7401307* AQR = $29 = LINK OR 00000004       
C 0000009a e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000009b 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 0000009c bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 0000009d efc00305  WQ = $31 = RQ OR 00000000                  ld          wq,rq
C 0000009e                                              .L19:
C 0000009e 00000003* LINK = 00000000                            aqr_long_ld vb,_cycleCounter
C 0000009f f7401307* AQR = $29 = LINK OR 00000004       
C 000000a0 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000000a1 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 000000a2 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000000a3 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 000000a4 e8800305  $2 = RQ OR 00000000                        ld          r2,rq
C 000000a5 08400845  $1 = $1 SUB $2                             sub         r1,r1,r2
C 000000a6 bf402247  AQR = $29 = $23 SUB 00000008               aqr_sub     vb,fp,8
C 000000a7 e8800305  $2 = RQ OR 00000000                        ld          r2,rq
C 000000a8 0f400845  $29 = $1 SUB $2                            sub         vb,r1,r2
C 000000a9 f8002e4f  JNC PC SUB 0000000b                        jnc         .L19
C 000000aa bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 000000ab e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 000000ac edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 000000ad e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 000000ae e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 000000af e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _icSleep, .-_icSleep
                                                                .alignw 1
                                                                .type   _icSema_tryP, @function
C 000000b0                                              _icSema_tryP:
C 000000b0 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 000000b1 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 000000b2 e7003245  $28 = $28 SUB 0000000c                     sub         sp,sp,12
C 000000b3 e7402206  AQW = $29 = $28 ADD 00000008               aqw_add     vb,sp,8
C 000000b4 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 000000b5 e5c02205  $23 = $28 ADD 00000008                     add         fp,sp,8
C 000000b6 bf402246  AQW = $29 = $23 SUB 00000008               aqw_sub     vb,fp,8
C 000000b7 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 000000b8 bf402247  AQR = $29 = $23 SUB 00000008               aqr_sub     vb,fp,8
C 000000b9 e88a0301  $2 = RQ OR 00000000 LSL 5                  lsl         r2,rq,5
C 000000ba 00000013* LINK = 00000010                            aqr_long_ld vb,_semaControl
C 000000bb f7402307* AQR = $29 = LINK OR 00000008       
C 000000bc e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000000bd bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 000000be 17c00505  WQ = $31 = $2 OR $1                        or          wq,r2,r1
C 000000bf bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 000000c0 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000000c1 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 000000c2 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000000c3 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 000000c4 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 000000c5 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 000000c6 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 000000c7 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 000000c8 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _icSema_tryP, .-_icSema_tryP
                                                                .alignw 1
                                                                .type   _icSema_P, @function
C 000000c9                                              _icSema_P:
C 000000c9 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 000000ca f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 000000cb e7002245  $28 = $28 SUB 00000008                     sub         sp,sp,8
C 000000cc e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 000000cd bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 000000ce e5c01205  $23 = $28 ADD 00000004                     add         fp,sp,4
C 000000cf bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 000000d0 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 000000d1 f800120c  J PC ADD 00000004                          j           .L24
C 000000d2                                              .L25:
C 000000d2 00cfa205  $3 = $0 ADD 000003e8                       ld          r3,1000
C 000000d3 00000093* LINK = 00000090                            long_call   _icSleep
C 000000d4 f0000308* CALL LINK OR 00000000              
C 000000d5                                              .L24:
C 000000d5 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 000000d6 e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 000000d7 000000b3* LINK = 000000b0                            long_call   _icSema_tryP
C 000000d8 f0000308* CALL LINK OR 00000000              
C 000000d9 0f400645  $29 = $1 SUB 00000001                      sub         vb,r1,1
C 000000da f800224e  JNZ PC SUB 00000008                        jnz         .L25
C 000000db bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 000000dc e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 000000dd edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 000000de e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 000000df e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 000000e0 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _icSema_P, .-_icSema_P
                                                                .alignw 1
                                                                .type   _cacheLineAddress, @function
C 000000e1                                              _cacheLineAddress:
C 000000e1 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 000000e2 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 000000e3 e7002245  $28 = $28 SUB 00000008                     sub         sp,sp,8
C 000000e4 e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 000000e5 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 000000e6 e5c01205  $23 = $28 ADD 00000004                     add         fp,sp,4
C 000000e7 bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 000000e8 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 000000e9 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 000000ea e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000000eb 084a0300  $1 = $1 OR 00000000 LSR 5                  lsr         r1,r1,5
C 000000ec bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 000000ed e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 000000ee edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 000000ef e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 000000f0 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 000000f1 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _cacheLineAddress, .-_cacheLineAddress
                                                                .alignw 1
                                                                .type   _cacheAlign, @function
C 000000f2                                              _cacheAlign:
C 000000f2 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 000000f3 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 000000f4 e7002245  $28 = $28 SUB 00000008                     sub         sp,sp,8
C 000000f5 e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 000000f6 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 000000f7 e5c01205  $23 = $28 ADD 00000004                     add         fp,sp,4
C 000000f8 bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 000000f9 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 000000fa bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 000000fb e8407e05  $1 = RQ ADD 0000001f                       add         r1,rq,31
C 000000fc 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 000000fd 000000e3* LINK = 000000e0                            long_call   _cacheLineAddress
C 000000fe f0000708* CALL LINK OR 00000001              
C 000000ff 084a0301  $1 = $1 OR 00000000 LSL 5                  lsl         r1,r1,5
C 00000100 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 00000101 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 00000102 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 00000103 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 00000104 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000105 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _cacheAlign, .-_cacheAlign
                                                                .alignw 1
                                                                .type   _cacheMultiple, @function
C 00000106                                              _cacheMultiple:
C 00000106 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000107 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000108 e7002245  $28 = $28 SUB 00000008                     sub         sp,sp,8
C 00000109 e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 0000010a bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 0000010b e5c01205  $23 = $28 ADD 00000004                     add         fp,sp,4
C 0000010c bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 0000010d 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 0000010e bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 0000010f e8407e05  $1 = RQ ADD 0000001f                       add         r1,rq,31
C 00000110 08407ec5  $1 = $1 ANDN 0000001f                      andn        r1,r1,31
C 00000111 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 00000112 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 00000113 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 00000114 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 00000115 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000116 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _cacheMultiple, .-_cacheMultiple
                                                                .alignw 1
                                                                .type   _cache_flushMem, @function
C 00000117                                              _cache_flushMem:
C 00000117 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000118 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000119 e7005245  $28 = $28 SUB 00000014                     sub         sp,sp,20
C 0000011a e7404206  AQW = $29 = $28 ADD 00000010               aqw_add     vb,sp,16
C 0000011b bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 0000011c e5c04205  $23 = $28 ADD 00000010                     add         fp,sp,16
C 0000011d e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 0000011e 4fc00305  WQ = $31 = $9 OR 00000000                  ld          wq,r9
C 0000011f bf402246  AQW = $29 = $23 SUB 00000008               aqw_sub     vb,fp,8
C 00000120 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 00000121 bf403246  AQW = $29 = $23 SUB 0000000c               aqw_sub     vb,fp,12
C 00000122 27c00305  WQ = $31 = $4 OR 00000000                  ld          wq,r4
C 00000123 bf403247  AQR = $29 = $23 SUB 0000000c               aqr_sub     vb,fp,12
C 00000124 ef400245  $29 = RQ SUB 00000000                      sub         vb,rq,0
C 00000125 f8008e0a  JZ PC ADD 00000023                         jz          .L36
C 00000126 bf403247  AQR = $29 = $23 SUB 0000000c               aqr_sub     vb,fp,12
C 00000127 e8400645  $1 = RQ SUB 00000001                       sub         r1,rq,1
C 00000128 bf402247  AQR = $29 = $23 SUB 00000008               aqr_sub     vb,fp,8
C 00000129 e8400405  $1 = RQ ADD $1                             add         r1,rq,r1
C 0000012a 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 0000012b 000000e3* LINK = 000000e0                            long_call   _cacheLineAddress
C 0000012c f0000708* CALL LINK OR 00000001              
C 0000012d 0a400305  $9 = $1 OR 00000000                        ld          r9,r1
C 0000012e bf402247  AQR = $29 = $23 SUB 00000008               aqr_sub     vb,fp,8
C 0000012f e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 00000130 000000e3* LINK = 000000e0                            long_call   _cacheLineAddress
C 00000131 f0000708* CALL LINK OR 00000001              
C 00000132 bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 00000133 4fc00445  WQ = $31 = $9 SUB $1                       sub         wq,r9,r1
C 00000134 0041fa05  $1 = $0 ADD 0000007e                       ld          r1,126
C 00000135 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 00000136 e8800305  $2 = RQ OR 00000000                        ld          r2,rq
C 00000137 0f400845  $29 = $1 SUB $2                            sub         vb,r1,r2
C 00000138 f8001a0b  JC PC ADD 00000006                         jc          .L35
C 00000139 00c000c5  $3 = $0 ANDN $0                            ld          r3,0
C 0000013a 0101fe05  $4 = $0 ADD 0000007f                       ld          r4,127
C 0000013b 00000003* LINK = 00000000                            long_call   _cache_flush
C 0000013c f0000308* CALL LINK OR 00000000              
C 0000013d f8002e0c  J PC ADD 0000000b                          j           .L36
C 0000013e                                              .L35:
C 0000013e bf402247  AQR = $29 = $23 SUB 00000008               aqr_sub     vb,fp,8
C 0000013f e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 00000140 000000e3* LINK = 000000e0                            long_call   _cacheLineAddress
C 00000141 f0000708* CALL LINK OR 00000001              
C 00000142 0841fe85  $1 = $1 AND 0000007f                       and         r1,r1,127
C 00000143 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 00000144 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 00000145 e9000305  $4 = RQ OR 00000000                        ld          r4,rq
C 00000146 00000003* LINK = 00000000                            long_call   _cache_flush
C 00000147 f0000308* CALL LINK OR 00000000              
C 00000148                                              .L36:
C 00000148 bf404247  AQR = $29 = $23 SUB 00000010               aqr_sub     vb,fp,16
C 00000149 ea400305  $9 = RQ OR 00000000                        ld          r9,rq
C 0000014a bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 0000014b e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 0000014c edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 0000014d e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 0000014e e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 0000014f e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _cache_flushMem, .-_cache_flushMem
                                                                .alignw 1
                                                                .type   _cache_invalidateMem, @function
C 00000150                                              _cache_invalidateMem:
C 00000150 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000151 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000152 e7007245  $28 = $28 SUB 0000001c                     sub         sp,sp,28
C 00000153 e7406206  AQW = $29 = $28 ADD 00000018               aqw_add     vb,sp,24
C 00000154 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 00000155 e5c06205  $23 = $28 ADD 00000018                     add         fp,sp,24
C 00000156 e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 00000157 4fc00305  WQ = $31 = $9 OR 00000000                  ld          wq,r9
C 00000158 bf404246  AQW = $29 = $23 SUB 00000010               aqw_sub     vb,fp,16
C 00000159 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 0000015a bf405246  AQW = $29 = $23 SUB 00000014               aqw_sub     vb,fp,20
C 0000015b 27c00305  WQ = $31 = $4 OR 00000000                  ld          wq,r4
C 0000015c bf405247  AQR = $29 = $23 SUB 00000014               aqr_sub     vb,fp,20
C 0000015d ef400245  $29 = RQ SUB 00000000                      sub         vb,rq,0
C 0000015e f8008e0a  JZ PC ADD 00000023                         jz          .L40
C 0000015f bf405247  AQR = $29 = $23 SUB 00000014               aqr_sub     vb,fp,20
C 00000160 e8400645  $1 = RQ SUB 00000001                       sub         r1,rq,1
C 00000161 bf404247  AQR = $29 = $23 SUB 00000010               aqr_sub     vb,fp,16
C 00000162 e8400405  $1 = RQ ADD $1                             add         r1,rq,r1
C 00000163 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 00000164 000000e3* LINK = 000000e0                            long_call   _cacheLineAddress
C 00000165 f0000708* CALL LINK OR 00000001              
C 00000166 0a400305  $9 = $1 OR 00000000                        ld          r9,r1
C 00000167 bf404247  AQR = $29 = $23 SUB 00000010               aqr_sub     vb,fp,16
C 00000168 e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 00000169 000000e3* LINK = 000000e0                            long_call   _cacheLineAddress
C 0000016a f0000708* CALL LINK OR 00000001              
C 0000016b bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 0000016c 4fc00445  WQ = $31 = $9 SUB $1                       sub         wq,r9,r1
C 0000016d 0041fa05  $1 = $0 ADD 0000007e                       ld          r1,126
C 0000016e bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 0000016f e8800305  $2 = RQ OR 00000000                        ld          r2,rq
C 00000170 0f400845  $29 = $1 SUB $2                            sub         vb,r1,r2
C 00000171 f8001a0b  JC PC ADD 00000006                         jc          .L39
C 00000172 00c000c5  $3 = $0 ANDN $0                            ld          r3,0
C 00000173 0101fe05  $4 = $0 ADD 0000007f                       ld          r4,127
C 00000174 00000003* LINK = 00000000                            long_call   _cache_invalidate
C 00000175 f0000308* CALL LINK OR 00000000              
C 00000176 f8002e0c  J PC ADD 0000000b                          j           .L40
C 00000177                                              .L39:
C 00000177 bf404247  AQR = $29 = $23 SUB 00000010               aqr_sub     vb,fp,16
C 00000178 e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 00000179 000000e3* LINK = 000000e0                            long_call   _cacheLineAddress
C 0000017a f0000708* CALL LINK OR 00000001              
C 0000017b 0841fe85  $1 = $1 AND 0000007f                       and         r1,r1,127
C 0000017c 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 0000017d bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 0000017e e9000305  $4 = RQ OR 00000000                        ld          r4,rq
C 0000017f 00000003* LINK = 00000000                            long_call   _cache_invalidate
C 00000180 f0000308* CALL LINK OR 00000000              
C 00000181                                              .L40:
C 00000181 bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 00000182 ea400305  $9 = RQ OR 00000000                        ld          r9,rq
C 00000183 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 00000184 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 00000185 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 00000186 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 00000187 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000188 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _cache_invalidateMem, .-_cache_invalidateMem
                                                                .alignw 1
                                                                .type   _getSaveArea, @function
C 00000189                                              _getSaveArea:
C 00000189 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 0000018a f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 0000018b e7003245  $28 = $28 SUB 0000000c                     sub         sp,sp,12
C 0000018c e7402206  AQW = $29 = $28 ADD 00000008               aqw_add     vb,sp,8
C 0000018d bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 0000018e e5c02205  $23 = $28 ADD 00000008                     add         fp,sp,8
C 0000018f bf402246  AQW = $29 = $23 SUB 00000008               aqw_sub     vb,fp,8
C 00000190 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 00000191 00000003* LINK = 00000000                            long_ld     r1,_saveArea
C 00000192 f0400305* $1 = LINK OR 00000000              
C 00000193 08440301  $1 = $1 OR 00000000 LSL 2                  lsl         r1,r1,2
C 00000194 bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 00000195 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000196 bf402247  AQR = $29 = $23 SUB 00000008               aqr_sub     vb,fp,8
C 00000197 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000198 00800605  $2 = $0 ADD 00000001                       ld          r2,1
C 00000199 10400445  $1 = $2 SUB $1                             sub         r1,r2,r1
C 0000019a 08520301  $1 = $1 OR 00000000 LSL 9                  lsl         r1,r1,9
C 0000019b 00400445  $1 = $0 SUB $1                             sub         r1,zero,r1
C 0000019c bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 0000019d e8400405  $1 = RQ ADD $1                             add         r1,rq,r1
C 0000019e bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 0000019f e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 000001a0 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 000001a1 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 000001a2 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 000001a3 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _getSaveArea, .-_getSaveArea
                                                                .alignw 1
                                                                .type   _setFrameBuffer, @function
C 000001a4                                              _setFrameBuffer:
C 000001a4 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 000001a5 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 000001a6 e7002245  $28 = $28 SUB 00000008                     sub         sp,sp,8
C 000001a7 e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 000001a8 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 000001a9 e5c01205  $23 = $28 ADD 00000004                     add         fp,sp,4
C 000001aa bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 000001ab 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 000001ac 00000013* LINK = 00000010                            long_call   _enetCorenum
C 000001ad f0000f08* CALL LINK OR 00000003              
C 000001ae 08400605  $1 = $1 ADD 00000001                       add         r1,r1,1
C 000001af 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 000001b0 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 000001b1 e9000305  $4 = RQ OR 00000000                        ld          r4,rq
C 000001b2 00000003* LINK = 00000000                            long_call   _sfb_internal
C 000001b3 f0000308* CALL LINK OR 00000000              
C 000001b4 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 000001b5 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 000001b6 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 000001b7 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 000001b8 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 000001b9 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _setFrameBuffer, .-_setFrameBuffer
                                                                .alignw 1
                                                                .type   _counters_start, @function
C 000001ba                                              _counters_start:
C 000001ba e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 000001bb f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 000001bc e7001245  $28 = $28 SUB 00000004                     sub         sp,sp,4
C 000001bd e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 000001be bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 000001bf e5c00205  $23 = $28 ADD 00000000                     add         fp,sp,0
C 000001c0 00c0ea05  $3 = $0 ADD 0000003a                       ld          r3,58
C 000001c1 00000003* LINK = 00000000                            long_call   _rawWrite
C 000001c2 f0000308* CALL LINK OR 00000000              
C 000001c3 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 000001c4 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 000001c5 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 000001c6 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 000001c7 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 000001c8 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _counters_start, .-_counters_start
                                                                .alignw 1
                                                                .type   _counters_stop, @function
C 000001c9                                              _counters_stop:
C 000001c9 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 000001ca f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 000001cb e7001245  $28 = $28 SUB 00000004                     sub         sp,sp,4
C 000001cc e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 000001cd bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 000001ce e5c00205  $23 = $28 ADD 00000000                     add         fp,sp,0
C 000001cf 00c06a05  $3 = $0 ADD 0000001a                       ld          r3,26
C 000001d0 00000003* LINK = 00000000                            long_call   _rawWrite
C 000001d1 f0000308* CALL LINK OR 00000000              
C 000001d2 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 000001d3 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 000001d4 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 000001d5 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 000001d6 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 000001d7 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _counters_stop, .-_counters_stop
                                                                .alignw 1
                                                                .type   _counters_readAndZero, @function
C 000001d8                                              _counters_readAndZero:
C 000001d8 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 000001d9 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 000001da e7002245  $28 = $28 SUB 00000008                     sub         sp,sp,8
C 000001db e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 000001dc bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 000001dd e5c01205  $23 = $28 ADD 00000004                     add         fp,sp,4
C 000001de bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 000001df 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 000001e0 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 000001e1 e84a0301  $1 = RQ OR 00000000 LSL 5                  lsl         r1,rq,5
C 000001e2 08406b05  $1 = $1 OR 0000001a                        or          r1,r1,26
C 000001e3 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 000001e4 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000001e5 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 000001e6 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 000001e7 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 000001e8 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 000001e9 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 000001ea e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _counters_readAndZero, .-_counters_readAndZero
                                                                .data
                                                                .alignw 1
                                                                .type   _timerInerruptControl_mask, @object
                                                                .size   _timerInerruptControl_mask, 4
D 0000001c                                              _timerInerruptControl_mask:
D 0000001c 0000001a                                             .long   26
                                                                .alignw 1
                                                                .type   _timerInerruptControl_timeInterval, @object
                                                                .size   _timerInerruptControl_timeInterval, 4
D 00000020                                              _timerInerruptControl_timeInterval:
D 00000020 0000003a                                             .long   58
                                                                .alignw 1
                                                                .type   _timerInerruptControl_handlerR, @object
                                                                .size   _timerInerruptControl_handlerR, 4
D 00000024                                              _timerInerruptControl_handlerR:
D 00000024 0000005a                                             .long   90
                                                                .alignw 1
                                                                .type   _timerInerruptControl_epc, @object
                                                                .size   _timerInerruptControl_epc, 4
D 00000028                                              _timerInerruptControl_epc:
D 00000028 0000007a                                             .long   122
                                                                .code
                                                                .alignw 1
                                                                .type   _read_mask, @function
C 000001eb                                              _read_mask:
C 000001eb e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 000001ec f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 000001ed e7001245  $28 = $28 SUB 00000004                     sub         sp,sp,4
C 000001ee e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 000001ef bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 000001f0 e5c00205  $23 = $28 ADD 00000000                     add         fp,sp,0
C 000001f1 00406a05  $1 = $0 ADD 0000001a                       ld          r1,26
C 000001f2 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 000001f3 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000001f4 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 000001f5 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 000001f6 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 000001f7 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 000001f8 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 000001f9 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _read_mask, .-_read_mask
                                                                .alignw 1
                                                                .type   _read_timeIntervals, @function
C 000001fa                                              _read_timeIntervals:
C 000001fa e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 000001fb f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 000001fc e7001245  $28 = $28 SUB 00000004                     sub         sp,sp,4
C 000001fd e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 000001fe bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 000001ff e5c00205  $23 = $28 ADD 00000000                     add         fp,sp,0
C 00000200 0040ea05  $1 = $0 ADD 0000003a                       ld          r1,58
C 00000201 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 00000202 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000203 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 00000204 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 00000205 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 00000206 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 00000207 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000208 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _read_timeIntervals, .-_read_timeIntervals
                                                                .alignw 1
                                                                .type   _read_handlerR, @function
C 00000209                                              _read_handlerR:
C 00000209 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 0000020a f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 0000020b e7001245  $28 = $28 SUB 00000004                     sub         sp,sp,4
C 0000020c e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 0000020d bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 0000020e e5c00205  $23 = $28 ADD 00000000                     add         fp,sp,0
C 0000020f 00416a05  $1 = $0 ADD 0000005a                       ld          r1,90
C 00000210 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 00000211 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000212 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 00000213 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 00000214 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 00000215 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 00000216 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000217 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _read_handlerR, .-_read_handlerR
                                                                .alignw 1
                                                                .type   _read_epc, @function
C 00000218                                              _read_epc:
C 00000218 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000219 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 0000021a e7001245  $28 = $28 SUB 00000004                     sub         sp,sp,4
C 0000021b e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 0000021c bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 0000021d e5c00205  $23 = $28 ADD 00000000                     add         fp,sp,0
C 0000021e 0041ea05  $1 = $0 ADD 0000007a                       ld          r1,122
C 0000021f 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 00000220 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000221 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 00000222 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 00000223 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 00000224 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 00000225 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000226 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _read_epc, .-_read_epc
                                                                .globl  _CLOCK_TO_MS
                                                                .data
                                                                .alignw 1
                                                                .type   _CLOCK_TO_MS, @object
                                                                .size   _CLOCK_TO_MS, 4
D 0000002c                                              _CLOCK_TO_MS:
D 0000002c 00989680                                             .long   10000000
                                                                .globl  _names
D 00000030                                              .LC0:
D 00000030 74  61  73  6b                                       .string "task1"
D 00000034 31  00                                       
D 00000036                                              .LC1:
D 00000036 74  61                                               .string "task2"
D 00000038 73  6b  32  00                               
D 0000003c                                              .LC2:
D 0000003c 74  61  73  6b                                       .string "task3"
D 00000040 33  00                                       
                                                                .data
                                                                .alignw 1
                                                                .type   _names, @object
                                                                .size   _names, 12
D 00000044                                              _names:
D 00000044 00000030*                                            .long   .LC0
D 00000048 00000036*                                            .long   .LC1
D 0000004c 0000003c*                                            .long   .LC2
                                                                .local  _wait_after_done
                                                                .comm   _wait_after_done,4,4
                                                                .local  _timer
                                                                .comm   _timer,4,4
                                                                .code
                                                                .alignw 1
                                                                .globl  _mc_init
                                                                .type   _mc_init, @function
C 00000227                                              _mc_init:
C 00000227 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000228 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000229 e7001245  $28 = $28 SUB 00000004                     sub         sp,sp,4
C 0000022a e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 0000022b bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 0000022c e5c00205  $23 = $28 ADD 00000000                     add         fp,sp,0
C 0000022d bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 0000022e e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 0000022f edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 00000230 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 00000231 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000232 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _mc_init, .-_mc_init
                                                                .data
D 00000050                                              .LC3:
D 00000050 50  72  6f  63                                       .string "Processor1"
D 00000054 65  73  73  6f                               
D 00000058 72  31  00                                   
                                                                .code
                                                                .alignw 1
                                                                .globl  _mc_main
                                                                .type   _mc_main, @function
C 00000233                                              _mc_main:
C 00000233 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000234 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000235 e7002245  $28 = $28 SUB 00000008                     sub         sp,sp,8
C 00000236 e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 00000237 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 00000238 e5c01205  $23 = $28 ADD 00000004                     add         fp,sp,4
C 00000239 00000003* LINK = 00000000                            long_call   _corenum
C 0000023a f0000308* CALL LINK OR 00000000              
C 0000023b bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 0000023c 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 0000023d bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 0000023e ef400a45  $29 = RQ SUB 00000002                      sub         vb,rq,2
C 0000023f f8019e0e  JNZ PC ADD 00000067                        jnz         .L64
C 00000240 00000053* LINK = 00000050                            long_ld     r3,.LC3
C 00000241 f0c00305* $3 = LINK OR 00000000              
C 00000242 00000003* LINK = 00000000                            long_call   _new_processor
C 00000243 f0000308* CALL LINK OR 00000000              
C 00000244 00000213* LINK = 00000210                            aqw_long_ld vb,_s_processor
C 00000245 f7400306* AQW = $29 = LINK OR 00000000       
C 00000246 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000247 00000043* LINK = 00000040                            long_ld     r3,_names
C 00000248 f0c01305* $3 = LINK OR 00000004              
C 00000249 01000e05  $4 = $0 ADD 00000003                       ld          r4,3
C 0000024a 00000003* LINK = 00000000                            long_call   _new_tasks
C 0000024b f0000308* CALL LINK OR 00000000              
C 0000024c 00000213* LINK = 00000210                            aqw_long_ld vb,_s_tasks
C 0000024d f7401306* AQW = $29 = LINK OR 00000004       
C 0000024e 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 0000024f 00000213* LINK = 00000210                            aqr_long_ld vb,_s_tasks
C 00000250 f7401307* AQR = $29 = LINK OR 00000004       
C 00000251 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000252 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 00000253 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000254 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 00000255 00000003* LINK = 00000000                            long_call   _puts
C 00000256 f0000308* CALL LINK OR 00000000              
C 00000257 00000213* LINK = 00000210                            aqr_long_ld vb,_s_tasks
C 00000258 f7401307* AQR = $29 = LINK OR 00000004       
C 00000259 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000025a 0842a205  $1 = $1 ADD 000000a8                       add         r1,r1,168
C 0000025b 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 0000025c e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000025d 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 0000025e 00000003* LINK = 00000000                            long_call   _puts
C 0000025f f0000308* CALL LINK OR 00000000              
C 00000260 00000213* LINK = 00000210                            aqr_long_ld vb,_s_tasks
C 00000261 f7401307* AQR = $29 = LINK OR 00000004       
C 00000262 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000263 08454205  $1 = $1 ADD 00000150                       add         r1,r1,336
C 00000264 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 00000265 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000266 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 00000267 00000003* LINK = 00000000                            long_call   _puts
C 00000268 f0000308* CALL LINK OR 00000000              
C 00000269 00000213* LINK = 00000210                            aqr_long_ld vb,_s_tasks
C 0000026a f7401307* AQR = $29 = LINK OR 00000004       
C 0000026b e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000026c 0f401207  AQR = $29 = $1 ADD 00000004                aqr_add     vb,r1,4
C 0000026d e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000026e 0840c205  $1 = $1 ADD 00000030                       add         r1,r1,48
C 0000026f 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 00000270 00000003* LINK = 00000000                            long_call   _putchar
C 00000271 f0000308* CALL LINK OR 00000000              
C 00000272 00000213* LINK = 00000210                            aqr_long_ld vb,_s_tasks
C 00000273 f7401307* AQR = $29 = LINK OR 00000004       
C 00000274 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000275 0842a205  $1 = $1 ADD 000000a8                       add         r1,r1,168
C 00000276 0f401207  AQR = $29 = $1 ADD 00000004                aqr_add     vb,r1,4
C 00000277 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000278 0840c205  $1 = $1 ADD 00000030                       add         r1,r1,48
C 00000279 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 0000027a 00000003* LINK = 00000000                            long_call   _putchar
C 0000027b f0000308* CALL LINK OR 00000000              
C 0000027c 00000213* LINK = 00000210                            aqr_long_ld vb,_s_tasks
C 0000027d f7401307* AQR = $29 = LINK OR 00000004       
C 0000027e e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000027f 08454205  $1 = $1 ADD 00000150                       add         r1,r1,336
C 00000280 0f401207  AQR = $29 = $1 ADD 00000004                aqr_add     vb,r1,4
C 00000281 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000282 0840c205  $1 = $1 ADD 00000030                       add         r1,r1,48
C 00000283 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 00000284 00000003* LINK = 00000000                            long_call   _putchar
C 00000285 f0000308* CALL LINK OR 00000000              
C 00000286 00000213* LINK = 00000210                            aqr_long_ld vb,_s_processor
C 00000287 f7400307* AQR = $29 = LINK OR 00000000       
C 00000288 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000289 00000213* LINK = 00000210                            aqr_long_ld vb,_s_tasks
C 0000028a f7401307* AQR = $29 = LINK OR 00000004       
C 0000028b e8800305  $2 = RQ OR 00000000                        ld          r2,rq
C 0000028c 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 0000028d 11000305  $4 = $2 OR 00000000                        ld          r4,r2
C 0000028e 01400e05  $5 = $0 ADD 00000003                       ld          r5,3
C 0000028f 000002c3* LINK = 000002c0                            long_call   _init_tasks
C 00000290 f0000308* CALL LINK OR 00000000              
C 00000291 00000213* LINK = 00000210                            aqw_long_ld vb,_wait_after_done
C 00000292 f7403306* AQW = $29 = LINK OR 0000000c       
C 00000293 07c00605  WQ = $31 = $0 ADD 00000001                 ld          wq,1
C 00000294 00000003* LINK = 00000000                            long_ld     r1,_isr
C 00000295 f0400305* $1 = LINK OR 00000000              
C 00000296 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 00000297 00000003* LINK = 00000000                            long_call   _set_handlerR
C 00000298 f0000308* CALL LINK OR 00000000              
C 00000299 00000023* LINK = 00000020                            aqr_long_ld vb,_CLOCK_TO_MS
C 0000029a f7403307* AQR = $29 = LINK OR 0000000c       
C 0000029b e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000029c 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 0000029d 00000003* LINK = 00000000                            long_call   _set_timerInterval
C 0000029e f0000308* CALL LINK OR 00000000              
C 0000029f 00c19a05  $3 = $0 ADD 00000066                       ld          r3,102
C 000002a0 00000003* LINK = 00000000                            long_call   _putchar
C 000002a1 f0000308* CALL LINK OR 00000000              
C 000002a2 00c000c5  $3 = $0 ANDN $0                            ld          r3,0
C 000002a3 00000003* LINK = 00000000                            long_call   _set_mask
C 000002a4 f0000308* CALL LINK OR 00000000              
C 000002a5                                              .L63:
C 000002a5 f800020c  J PC ADD 00000000                          j           .L63
C 000002a6                                              .L64:
C 000002a6 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 000002a7 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 000002a8 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 000002a9 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 000002aa e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 000002ab e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _mc_main, .-_mc_main
                                                                .alignw 1
                                                                .globl  _test_func_execute_time
                                                                .type   _test_func_execute_time, @function
C 000002ac                                              _test_func_execute_time:
C 000002ac e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 000002ad f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 000002ae e7002245  $28 = $28 SUB 00000008                     sub         sp,sp,8
C 000002af e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 000002b0 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 000002b1 e5c01205  $23 = $28 ADD 00000004                     add         fp,sp,4
C 000002b2 bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 000002b3 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 000002b4 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 000002b5 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000002b6 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 000002b7 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000002b8 08000308  CALL $1 OR 00000000                        call        r1
C 000002b9 00401605  $1 = $0 ADD 00000005                       ld          r1,5
C 000002ba bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 000002bb e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 000002bc edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 000002bd e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 000002be e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 000002bf e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _test_func_execute_time, .-_test_func_execute_time
                                                                .alignw 1
                                                                .globl  _init_tasks
                                                                .type   _init_tasks, @function
C 000002c0                                              _init_tasks:
C 000002c0 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 000002c1 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 000002c2 e7009245  $28 = $28 SUB 00000024                     sub         sp,sp,36
C 000002c3 e7408206  AQW = $29 = $28 ADD 00000020               aqw_add     vb,sp,32
C 000002c4 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 000002c5 e5c08205  $23 = $28 ADD 00000020                     add         fp,sp,32
C 000002c6 e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 000002c7 4fc00305  WQ = $31 = $9 OR 00000000                  ld          wq,r9
C 000002c8 bf405246  AQW = $29 = $23 SUB 00000014               aqw_sub     vb,fp,20
C 000002c9 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 000002ca bf406246  AQW = $29 = $23 SUB 00000018               aqw_sub     vb,fp,24
C 000002cb 27c00305  WQ = $31 = $4 OR 00000000                  ld          wq,r4
C 000002cc bf407246  AQW = $29 = $23 SUB 0000001c               aqw_sub     vb,fp,28
C 000002cd 2fc00305  WQ = $31 = $5 OR 00000000                  ld          wq,r5
C 000002ce 00c02a05  $3 = $0 ADD 0000000a                       ld          r3,10
C 000002cf 00000003* LINK = 00000000                            long_call   _putchar
C 000002d0 f0000308* CALL LINK OR 00000000              
C 000002d1 bf407247  AQR = $29 = $23 SUB 0000001c               aqr_sub     vb,fp,28
C 000002d2 e840c205  $1 = RQ ADD 00000030                       add         r1,rq,48
C 000002d3 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 000002d4 00000003* LINK = 00000000                            long_call   _putchar
C 000002d5 f0000308* CALL LINK OR 00000000              
C 000002d6 00c02a05  $3 = $0 ADD 0000000a                       ld          r3,10
C 000002d7 00000003* LINK = 00000000                            long_call   _putchar
C 000002d8 f0000308* CALL LINK OR 00000000              
C 000002d9 bf402246  AQW = $29 = $23 SUB 00000008               aqw_sub     vb,fp,8
C 000002da 00000403* LINK = 00000400                            long_ld     wq,_task_1
C 000002db f7c03705* WQ = $31 = LINK OR 0000000d        
C 000002dc bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 000002dd e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000002de 0f407206  AQW = $29 = $1 ADD 0000001c                aqw_add     vb,r1,28
C 000002df bfc02245  WQ = $31 = $23 SUB 00000008                sub         wq,fp,8
C 000002e0 bf403246  AQW = $29 = $23 SUB 0000000c               aqw_sub     vb,fp,12
C 000002e1 00000443* LINK = 00000440                            long_ld     wq,_task_2
C 000002e2 f7c00305* WQ = $31 = LINK OR 00000000        
C 000002e3 bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 000002e4 e842a205  $1 = RQ ADD 000000a8                       add         r1,rq,168
C 000002e5 0f407206  AQW = $29 = $1 ADD 0000001c                aqw_add     vb,r1,28
C 000002e6 bfc03245  WQ = $31 = $23 SUB 0000000c                sub         wq,fp,12
C 000002e7 bf404246  AQW = $29 = $23 SUB 00000010               aqw_sub     vb,fp,16
C 000002e8 00000483* LINK = 00000480                            long_ld     wq,_task_3
C 000002e9 f7c00705* WQ = $31 = LINK OR 00000001        
C 000002ea bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 000002eb e8454205  $1 = RQ ADD 00000150                       add         r1,rq,336
C 000002ec 0f407206  AQW = $29 = $1 ADD 0000001c                aqw_add     vb,r1,28
C 000002ed bfc04245  WQ = $31 = $23 SUB 00000010                sub         wq,fp,16
C 000002ee bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 000002ef 07c000c5  WQ = $31 = $0 ANDN $0                      ld          wq,0
C 000002f0 f801560c  J PC ADD 00000055                          j           .L68
C 000002f1                                              .L69:
C 000002f1 00c19605  $3 = $0 ADD 00000065                       ld          r3,101
C 000002f2 00000003* LINK = 00000000                            long_call   _putchar
C 000002f3 f0000308* CALL LINK OR 00000000              
C 000002f4 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 000002f5 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000002f6 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 000002f7 07c2a205  WQ = $31 = $0 ADD 000000a8                 ld          wq,168
C 000002f8 07401a06  AQW = $29 = $0 ADD 00000006                aqw_add     vb,zero,6
C 000002f9 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000002fa ef400305  $29 = RQ OR 00000000                       ld          vb,rq
C 000002fb bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 000002fc ea400405  $9 = RQ ADD $1                             add         r9,rq,r1
C 000002fd bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 000002fe e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000002ff 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000300 07c2a205  WQ = $31 = $0 ADD 000000a8                 ld          wq,168
C 00000301 07401a06  AQW = $29 = $0 ADD 00000006                aqw_add     vb,zero,6
C 00000302 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000303 ef400305  $29 = RQ OR 00000000                       ld          vb,rq
C 00000304 bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 00000305 e8400405  $1 = RQ ADD $1                             add         r1,rq,r1
C 00000306 0f407207  AQR = $29 = $1 ADD 0000001c                aqr_add     vb,r1,28
C 00000307 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000308 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 00000309 000002a3* LINK = 000002a0                            long_call   _test_func_execute_time
C 0000030a f0003308* CALL LINK OR 0000000c              
C 0000030b 4f403206  AQW = $29 = $9 ADD 0000000c                aqw_add     vb,r9,12
C 0000030c 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 0000030d bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 0000030e e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000030f 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000310 07c2a205  WQ = $31 = $0 ADD 000000a8                 ld          wq,168
C 00000311 07401a06  AQW = $29 = $0 ADD 00000006                aqw_add     vb,zero,6
C 00000312 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000313 ef400305  $29 = RQ OR 00000000                       ld          vb,rq
C 00000314 bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 00000315 e8c00405  $3 = RQ ADD $1                             add         r3,rq,r1
C 00000316 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 00000317 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000318 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000319 07c2a205  WQ = $31 = $0 ADD 000000a8                 ld          wq,168
C 0000031a 07401a06  AQW = $29 = $0 ADD 00000006                aqw_add     vb,zero,6
C 0000031b e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000031c ef400305  $29 = RQ OR 00000000                       ld          vb,rq
C 0000031d bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 0000031e e8400405  $1 = RQ ADD $1                             add         r1,rq,r1
C 0000031f 0f403207  AQR = $29 = $1 ADD 0000000c                aqr_add     vb,r1,12
C 00000320 e8800305  $2 = RQ OR 00000000                        ld          r2,rq
C 00000321 10400305  $1 = $2 OR 00000000                        ld          r1,r2
C 00000322 08440301  $1 = $1 OR 00000000 LSL 2                  lsl         r1,r1,2
C 00000323 08400805  $1 = $1 ADD $2                             add         r1,r1,r2
C 00000324 1f402206  AQW = $29 = $3 ADD 00000008                aqw_add     vb,r3,8
C 00000325 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000326 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 00000327 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000328 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000329 07c2a205  WQ = $31 = $0 ADD 000000a8                 ld          wq,168
C 0000032a 07401a06  AQW = $29 = $0 ADD 00000006                aqw_add     vb,zero,6
C 0000032b e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000032c ef400305  $29 = RQ OR 00000000                       ld          vb,rq
C 0000032d bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 0000032e e8800405  $2 = RQ ADD $1                             add         r2,rq,r1
C 0000032f 00000003* LINK = 00000000                            long_ld     r1,_isr
C 00000330 f0400305* $1 = LINK OR 00000000              
C 00000331 17426206  AQW = $29 = $2 ADD 00000098                aqw_add     vb,r2,152
C 00000332 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000333 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 00000334 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000335 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000336 07c2a205  WQ = $31 = $0 ADD 000000a8                 ld          wq,168
C 00000337 07401a06  AQW = $29 = $0 ADD 00000006                aqw_add     vb,zero,6
C 00000338 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000339 ef400305  $29 = RQ OR 00000000                       ld          vb,rq
C 0000033a bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 0000033b e8400405  $1 = RQ ADD $1                             add         r1,rq,r1
C 0000033c 0f401207  AQR = $29 = $1 ADD 00000004                aqr_add     vb,r1,4
C 0000033d e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000033e 0840c205  $1 = $1 ADD 00000030                       add         r1,r1,48
C 0000033f 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 00000340 00000003* LINK = 00000000                            long_call   _putchar
C 00000341 f0000308* CALL LINK OR 00000000              
C 00000342 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 00000343 bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 00000344 efc00605  WQ = $31 = RQ ADD 00000001                 add         wq,rq,1
C 00000345                                              .L68:
C 00000345 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 00000346 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000347 bf407247  AQR = $29 = $23 SUB 0000001c               aqr_sub     vb,fp,28
C 00000348 e8800305  $2 = RQ OR 00000000                        ld          r2,rq
C 00000349 067e0601  $25 = $0 ADD 00000001 LSL 31               lsl         t2,1,31
C 0000034a 0e006585  $24 = $1 XOR $25                           xor         t1,r1,t2
C 0000034b 16406585  $25 = $2 XOR $25                           xor         t2,r2,t2
C 0000034c c7406445  $29 = $24 SUB $25                          sub         vb,t1,t2
C 0000034d f801724f  JNC PC SUB 0000005c                        jnc         .L69
C 0000034e 00000403* LINK = 00000400                            long_ld     r2,_task_1
C 0000034f f0803705* $2 = LINK OR 0000000d              
C 00000350 bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 00000351 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000352 0f427206  AQW = $29 = $1 ADD 0000009c                aqw_add     vb,r1,156
C 00000353 17c00305  WQ = $31 = $2 OR 00000000                  ld          wq,r2
C 00000354 bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 00000355 e882a205  $2 = RQ ADD 000000a8                       add         r2,rq,168
C 00000356 00000443* LINK = 00000440                            long_ld     r1,_task_2
C 00000357 f0400305* $1 = LINK OR 00000000              
C 00000358 17427206  AQW = $29 = $2 ADD 0000009c                aqw_add     vb,r2,156
C 00000359 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 0000035a bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 0000035b e8854205  $2 = RQ ADD 00000150                       add         r2,rq,336
C 0000035c 00000483* LINK = 00000480                            long_ld     r1,_task_3
C 0000035d f0400705* $1 = LINK OR 00000001              
C 0000035e 17427206  AQW = $29 = $2 ADD 0000009c                aqw_add     vb,r2,156
C 0000035f 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000360 bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 00000361 e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 00000362 bf407247  AQR = $29 = $23 SUB 0000001c               aqr_sub     vb,fp,28
C 00000363 e9000305  $4 = RQ OR 00000000                        ld          r4,rq
C 00000364 00000003* LINK = 00000000                            long_call   _init_tasks_priority
C 00000365 f0000308* CALL LINK OR 00000000              
C 00000366 bf405247  AQR = $29 = $23 SUB 00000014               aqr_sub     vb,fp,20
C 00000367 e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 00000368 bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 00000369 e9000305  $4 = RQ OR 00000000                        ld          r4,rq
C 0000036a bf407247  AQR = $29 = $23 SUB 0000001c               aqr_sub     vb,fp,28
C 0000036b e9400305  $5 = RQ OR 00000000                        ld          r5,rq
C 0000036c 00000003* LINK = 00000000                            long_call   _set_tasks
C 0000036d f0000308* CALL LINK OR 00000000              
C 0000036e 00c09a05  $3 = $0 ADD 00000026                       ld          r3,38
C 0000036f 00000003* LINK = 00000000                            long_call   _putchar
C 00000370 f0000308* CALL LINK OR 00000000              
C 00000371 00c02a05  $3 = $0 ADD 0000000a                       ld          r3,10
C 00000372 00000003* LINK = 00000000                            long_call   _putchar
C 00000373 f0000308* CALL LINK OR 00000000              
C 00000374 bf408247  AQR = $29 = $23 SUB 00000020               aqr_sub     vb,fp,32
C 00000375 ea400305  $9 = RQ OR 00000000                        ld          r9,rq
C 00000376 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 00000377 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 00000378 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 00000379 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 0000037a e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 0000037b e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _init_tasks, .-_init_tasks
                                                                .globl  ___umodsi3
                                                                .alignw 1
                                                                .globl  _schedule
                                                                .type   _schedule, @function
C 0000037c                                              _schedule:
C 0000037c e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 0000037d f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 0000037e e7007245  $28 = $28 SUB 0000001c                     sub         sp,sp,28
C 0000037f e7406206  AQW = $29 = $28 ADD 00000018               aqw_add     vb,sp,24
C 00000380 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 00000381 e5c06205  $23 = $28 ADD 00000018                     add         fp,sp,24
C 00000382 00000003* LINK = 00000000                            long_call   _corenum
C 00000383 f0000308* CALL LINK OR 00000000              
C 00000384 08408205  $1 = $1 ADD 00000020                       add         r1,r1,32
C 00000385 08520301  $1 = $1 OR 00000000 LSL 9                  lsl         r1,r1,9
C 00000386 bf404246  AQW = $29 = $23 SUB 00000010               aqw_sub     vb,fp,16
C 00000387 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000388 00000213* LINK = 00000210                            aqr_long_ld vb,_s_processor
C 00000389 f7400307* AQR = $29 = LINK OR 00000000       
C 0000038a e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000038b 0f405207  AQR = $29 = $1 ADD 00000014                aqr_add     vb,r1,20
C 0000038c bf403246  AQW = $29 = $23 SUB 0000000c               aqw_sub     vb,fp,12
C 0000038d efc00305  WQ = $31 = RQ OR 00000000                  ld          wq,rq
C 0000038e 00000213* LINK = 00000210                            aqr_long_ld vb,_timer
C 0000038f f7402307* AQR = $29 = LINK OR 00000008       
C 00000390 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000391 00000213* LINK = 00000210                            aqr_long_ld vb,_s_processor
C 00000392 f7400307* AQR = $29 = LINK OR 00000000       
C 00000393 e8800305  $2 = RQ OR 00000000                        ld          r2,rq
C 00000394 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 00000395 11000305  $4 = $2 OR 00000000                        ld          r4,r2
C 00000396 00000003* LINK = 00000000                            long_call   _rm_schedule
C 00000397 f0000308* CALL LINK OR 00000000              
C 00000398 bf402246  AQW = $29 = $23 SUB 00000008               aqw_sub     vb,fp,8
C 00000399 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 0000039a 00000213* LINK = 00000210                            aqr_long_ld vb,_timer
C 0000039b f7402307* AQR = $29 = LINK OR 00000008       
C 0000039c e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 0000039d 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 0000039e 01002a05  $4 = $0 ADD 0000000a                       ld          r4,10
C 0000039f 00000003* LINK = 00000000                            long_call   ___umodsi3
C 000003a0 f0000308* CALL LINK OR 00000000              
C 000003a1 bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 000003a2 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 000003a3 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 000003a4 e840c205  $1 = RQ ADD 00000030                       add         r1,rq,48
C 000003a5 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 000003a6 00000003* LINK = 00000000                            long_call   _putchar
C 000003a7 f0000308* CALL LINK OR 00000000              
C 000003a8 00c02a05  $3 = $0 ADD 0000000a                       ld          r3,10
C 000003a9 00000003* LINK = 00000000                            long_call   _putchar
C 000003aa f0000308* CALL LINK OR 00000000              
C 000003ab bf402247  AQR = $29 = $23 SUB 00000008               aqr_sub     vb,fp,8
C 000003ac ef400245  $29 = RQ SUB 00000000                      sub         vb,rq,0
C 000003ad f8002e0a  JZ PC ADD 0000000b                         jz          .L72
C 000003ae bf402247  AQR = $29 = $23 SUB 00000008               aqr_sub     vb,fp,8
C 000003af e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000003b0 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 000003b1 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000003b2 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 000003b3 00000003* LINK = 00000000                            long_call   _puts
C 000003b4 f0000308* CALL LINK OR 00000000              
C 000003b5 00c1be05  $3 = $0 ADD 0000006f                       ld          r3,111
C 000003b6 00000003* LINK = 00000000                            long_call   _putchar
C 000003b7 f0000308* CALL LINK OR 00000000              
C 000003b8                                              .L72:
C 000003b8 00000213* LINK = 00000210                            aqr_long_ld vb,_timer
C 000003b9 f7402307* AQR = $29 = LINK OR 00000008       
C 000003ba e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000003bb 08400605  $1 = $1 ADD 00000001                       add         r1,r1,1
C 000003bc 00000213* LINK = 00000210                            aqw_long_ld vb,_timer
C 000003bd f7402306* AQW = $29 = LINK OR 00000008       
C 000003be 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 000003bf bf403247  AQR = $29 = $23 SUB 0000000c               aqr_sub     vb,fp,12
C 000003c0 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000003c1 bf402247  AQR = $29 = $23 SUB 00000008               aqr_sub     vb,fp,8
C 000003c2 ef400445  $29 = RQ SUB $1                            sub         vb,rq,r1
C 000003c3 f801120a  JZ PC ADD 00000044                         jz          .L79
C 000003c4 bf403247  AQR = $29 = $23 SUB 0000000c               aqr_sub     vb,fp,12
C 000003c5 ef400245  $29 = RQ SUB 00000000                      sub         vb,rq,0
C 000003c6 f800820a  JZ PC ADD 00000020                         jz          .L74
C 000003c7 bf406246  AQW = $29 = $23 SUB 00000018               aqw_sub     vb,fp,24
C 000003c8 07c000c5  WQ = $31 = $0 ANDN $0                      ld          wq,0
C 000003c9 f800560c  J PC ADD 00000015                          j           .L75
C 000003ca                                              .L76:
C 000003ca bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 000003cb e9000305  $4 = RQ OR 00000000                        ld          r4,rq
C 000003cc bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 000003cd e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000003ce 08440301  $1 = $1 OR 00000000 LSL 2                  lsl         r1,r1,2
C 000003cf bf404247  AQR = $29 = $23 SUB 00000010               aqr_sub     vb,fp,16
C 000003d0 e8400405  $1 = RQ ADD $1                             add         r1,rq,r1
C 000003d1 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 000003d2 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000003d3 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 000003d4 bf403247  AQR = $29 = $23 SUB 0000000c               aqr_sub     vb,fp,12
C 000003d5 e8800305  $2 = RQ OR 00000000                        ld          r2,rq
C 000003d6 20402205  $1 = $4 ADD 00000008                       add         r1,r4,8
C 000003d7 08440301  $1 = $1 OR 00000000 LSL 2                  lsl         r1,r1,2
C 000003d8 10400405  $1 = $2 ADD $1                             add         r1,r2,r1
C 000003d9 0f400306  AQW = $29 = $1 OR 00000000                 aqw_ld      vb,r1
C 000003da 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 000003db bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 000003dc bf406246  AQW = $29 = $23 SUB 00000018               aqw_sub     vb,fp,24
C 000003dd efc00605  WQ = $31 = RQ ADD 00000001                 add         wq,rq,1
C 000003de                                              .L75:
C 000003de 00807e05  $2 = $0 ADD 0000001f                       ld          r2,31
C 000003df bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 000003e0 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000003e1 067e0601  $25 = $0 ADD 00000001 LSL 31               lsl         t2,1,31
C 000003e2 16006585  $24 = $2 XOR $25                           xor         t1,r2,t2
C 000003e3 0e406585  $25 = $1 XOR $25                           xor         t2,r1,t2
C 000003e4 c7406445  $29 = $24 SUB $25                          sub         vb,t1,t2
C 000003e5 f8006e4b  JC PC SUB 0000001b                         jc          .L76
C 000003e6                                              .L74:
C 000003e6 bf402247  AQR = $29 = $23 SUB 00000008               aqr_sub     vb,fp,8
C 000003e7 ef400245  $29 = RQ SUB 00000000                      sub         vb,rq,0
C 000003e8 f8007e0a  JZ PC ADD 0000001f                         jz          .L79
C 000003e9 bf406246  AQW = $29 = $23 SUB 00000018               aqw_sub     vb,fp,24
C 000003ea 07c000c5  WQ = $31 = $0 ANDN $0                      ld          wq,0
C 000003eb f800520c  J PC ADD 00000014                          j           .L77
C 000003ec                                              .L78:
C 000003ec bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 000003ed e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000003ee 08440301  $1 = $1 OR 00000000 LSL 2                  lsl         r1,r1,2
C 000003ef bf404247  AQR = $29 = $23 SUB 00000010               aqr_sub     vb,fp,16
C 000003f0 e8c00405  $3 = RQ ADD $1                             add         r3,rq,r1
C 000003f1 bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 000003f2 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000003f3 bf402247  AQR = $29 = $23 SUB 00000008               aqr_sub     vb,fp,8
C 000003f4 e8800305  $2 = RQ OR 00000000                        ld          r2,rq
C 000003f5 08402205  $1 = $1 ADD 00000008                       add         r1,r1,8
C 000003f6 08440301  $1 = $1 OR 00000000 LSL 2                  lsl         r1,r1,2
C 000003f7 10400405  $1 = $2 ADD $1                             add         r1,r2,r1
C 000003f8 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 000003f9 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000003fa 1f400306  AQW = $29 = $3 OR 00000000                 aqw_ld      vb,r3
C 000003fb 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 000003fc bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 000003fd bf406246  AQW = $29 = $23 SUB 00000018               aqw_sub     vb,fp,24
C 000003fe efc00605  WQ = $31 = RQ ADD 00000001                 add         wq,rq,1
C 000003ff                                              .L77:
C 000003ff 00807e05  $2 = $0 ADD 0000001f                       ld          r2,31
C 00000400 bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 00000401 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000402 067e0601  $25 = $0 ADD 00000001 LSL 31               lsl         t2,1,31
C 00000403 16006585  $24 = $2 XOR $25                           xor         t1,r2,t2
C 00000404 0e406585  $25 = $1 XOR $25                           xor         t2,r1,t2
C 00000405 c7406445  $29 = $24 SUB $25                          sub         vb,t1,t2
C 00000406 f8006a4b  JC PC SUB 0000001a                         jc          .L78
C 00000407                                              .L79:
C 00000407 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 00000408 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 00000409 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 0000040a e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 0000040b e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 0000040c e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _schedule, .-_schedule
                                                                .alignw 1
                                                                .globl  _task_1
                                                                .type   _task_1, @function
C 0000040d                                              _task_1:
C 0000040d e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 0000040e f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 0000040f e7006245  $28 = $28 SUB 00000018                     sub         sp,sp,24
C 00000410 e7405206  AQW = $29 = $28 ADD 00000014               aqw_add     vb,sp,20
C 00000411 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 00000412 e5c05205  $23 = $28 ADD 00000014                     add         fp,sp,20
C 00000413 075bcd13  LINK = 075bcd10                            long_ld     r3,123456789
C 00000414 f0c01705  $3 = LINK OR 00000005              
C 00000415 000004c3* LINK = 000004c0                            long_call   _reverse_integer
C 00000416 f0000b08* CALL LINK OR 00000002              
C 00000417 bf405246  AQW = $29 = $23 SUB 00000014               aqw_sub     vb,fp,20
C 00000418 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000419 f8a432e3  LINK = f8a432e0                            long_ld     r3,-123456789
C 0000041a f0c02f05  $3 = LINK OR 0000000b              
C 0000041b 000004c3* LINK = 000004c0                            long_call   _reverse_integer
C 0000041c f0000b08* CALL LINK OR 00000002              
C 0000041d bf404246  AQW = $29 = $23 SUB 00000010               aqw_sub     vb,fp,16
C 0000041e 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 0000041f 00c000c5  $3 = $0 ANDN $0                            ld          r3,0
C 00000420 000004c3* LINK = 000004c0                            long_call   _reverse_integer
C 00000421 f0000b08* CALL LINK OR 00000002              
C 00000422 bf403246  AQW = $29 = $23 SUB 0000000c               aqw_sub     vb,fp,12
C 00000423 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000424 00cfa205  $3 = $0 ADD 000003e8                       ld          r3,1000
C 00000425 000004c3* LINK = 000004c0                            long_call   _reverse_integer
C 00000426 f0000b08* CALL LINK OR 00000002              
C 00000427 bf402246  AQW = $29 = $23 SUB 00000008               aqw_sub     vb,fp,8
C 00000428 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000429 00cf9f45  $3 = $0 ORN 000003e7                       orn         r3,zero,999
C 0000042a 000004c3* LINK = 000004c0                            long_call   _reverse_integer
C 0000042b f0000b08* CALL LINK OR 00000002              
C 0000042c bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 0000042d 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 0000042e 00000213* LINK = 00000210                            aqr_long_ld vb,_wait_after_done
C 0000042f f7403307* AQR = $29 = LINK OR 0000000c       
C 00000430 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000431 0f400645  $29 = $1 SUB 00000001                      sub         vb,r1,1
C 00000432 f800220e  JNZ PC ADD 00000008                        jnz         .L83
C 00000433 00000213* LINK = 00000210                            aqr_long_ld vb,_s_processor
C 00000434 f7400307* AQR = $29 = LINK OR 00000000       
C 00000435 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000436 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 00000437 00000003* LINK = 00000000                            long_call   _task_done
C 00000438 f0000308* CALL LINK OR 00000000              
C 00000439                                              .L82:
C 00000439 f800020c  J PC ADD 00000000                          j           .L82
C 0000043a                                              .L83:
C 0000043a bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 0000043b e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 0000043c edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 0000043d e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 0000043e e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 0000043f e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _task_1, .-_task_1
                                                                .alignw 1
                                                                .globl  _task_2
                                                                .type   _task_2, @function
C 00000440                                              _task_2:
C 00000440 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000441 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000442 e7007245  $28 = $28 SUB 0000001c                     sub         sp,sp,28
C 00000443 e7406206  AQW = $29 = $28 ADD 00000018               aqw_add     vb,sp,24
C 00000444 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 00000445 e5c06205  $23 = $28 ADD 00000018                     add         fp,sp,24
C 00000446 bf406246  AQW = $29 = $23 SUB 00000018               aqw_sub     vb,fp,24
C 00000447 07c000c5  WQ = $31 = $0 ANDN $0                      ld          wq,0
C 00000448 f8007e0c  J PC ADD 0000001f                          j           .L85
C 00000449                                              .L86:
C 00000449 075bcd13  LINK = 075bcd10                            long_ld     r3,123456789
C 0000044a f0c01705  $3 = LINK OR 00000005              
C 0000044b 000004c3* LINK = 000004c0                            long_call   _reverse_integer
C 0000044c f0000b08* CALL LINK OR 00000002              
C 0000044d bf405246  AQW = $29 = $23 SUB 00000014               aqw_sub     vb,fp,20
C 0000044e 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 0000044f f8a432e3  LINK = f8a432e0                            long_ld     r3,-123456789
C 00000450 f0c02f05  $3 = LINK OR 0000000b              
C 00000451 000004c3* LINK = 000004c0                            long_call   _reverse_integer
C 00000452 f0000b08* CALL LINK OR 00000002              
C 00000453 bf404246  AQW = $29 = $23 SUB 00000010               aqw_sub     vb,fp,16
C 00000454 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000455 00c000c5  $3 = $0 ANDN $0                            ld          r3,0
C 00000456 000004c3* LINK = 000004c0                            long_call   _reverse_integer
C 00000457 f0000b08* CALL LINK OR 00000002              
C 00000458 bf403246  AQW = $29 = $23 SUB 0000000c               aqw_sub     vb,fp,12
C 00000459 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 0000045a 00cfa205  $3 = $0 ADD 000003e8                       ld          r3,1000
C 0000045b 000004c3* LINK = 000004c0                            long_call   _reverse_integer
C 0000045c f0000b08* CALL LINK OR 00000002              
C 0000045d bf402246  AQW = $29 = $23 SUB 00000008               aqw_sub     vb,fp,8
C 0000045e 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 0000045f 00cf9f45  $3 = $0 ORN 000003e7                       orn         r3,zero,999
C 00000460 000004c3* LINK = 000004c0                            long_call   _reverse_integer
C 00000461 f0000b08* CALL LINK OR 00000002              
C 00000462 bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 00000463 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000464 bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 00000465 bf406246  AQW = $29 = $23 SUB 00000018               aqw_sub     vb,fp,24
C 00000466 efc00605  WQ = $31 = RQ ADD 00000001                 add         wq,rq,1
C 00000467                                              .L85:
C 00000467 00400a05  $1 = $0 ADD 00000002                       ld          r1,2
C 00000468 bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 00000469 e8800305  $2 = RQ OR 00000000                        ld          r2,rq
C 0000046a 067e0601  $25 = $0 ADD 00000001 LSL 31               lsl         t2,1,31
C 0000046b 0e006585  $24 = $1 XOR $25                           xor         t1,r1,t2
C 0000046c 16406585  $25 = $2 XOR $25                           xor         t2,r2,t2
C 0000046d c7406445  $29 = $24 SUB $25                          sub         vb,t1,t2
C 0000046e f800964b  JC PC SUB 00000025                         jc          .L86
C 0000046f 00000213* LINK = 00000210                            aqr_long_ld vb,_wait_after_done
C 00000470 f7403307* AQR = $29 = LINK OR 0000000c       
C 00000471 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000472 0f400245  $29 = $1 SUB 00000000                      sub         vb,r1,0
C 00000473 f800220a  JZ PC ADD 00000008                         jz          .L89
C 00000474 00000213* LINK = 00000210                            aqr_long_ld vb,_s_processor
C 00000475 f7400307* AQR = $29 = LINK OR 00000000       
C 00000476 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000477 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 00000478 00000003* LINK = 00000000                            long_call   _task_done
C 00000479 f0000308* CALL LINK OR 00000000              
C 0000047a                                              .L88:
C 0000047a f800020c  J PC ADD 00000000                          j           .L88
C 0000047b                                              .L89:
C 0000047b bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 0000047c e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 0000047d edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 0000047e e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 0000047f e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000480 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _task_2, .-_task_2
                                                                .alignw 1
                                                                .globl  _task_3
                                                                .type   _task_3, @function
C 00000481                                              _task_3:
C 00000481 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000482 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000483 e7007245  $28 = $28 SUB 0000001c                     sub         sp,sp,28
C 00000484 e7406206  AQW = $29 = $28 ADD 00000018               aqw_add     vb,sp,24
C 00000485 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 00000486 e5c06205  $23 = $28 ADD 00000018                     add         fp,sp,24
C 00000487 bf406246  AQW = $29 = $23 SUB 00000018               aqw_sub     vb,fp,24
C 00000488 07c000c5  WQ = $31 = $0 ANDN $0                      ld          wq,0
C 00000489 f8007e0c  J PC ADD 0000001f                          j           .L91
C 0000048a                                              .L92:
C 0000048a 075bcd13  LINK = 075bcd10                            long_ld     r3,123456789
C 0000048b f0c01705  $3 = LINK OR 00000005              
C 0000048c 000004c3* LINK = 000004c0                            long_call   _reverse_integer
C 0000048d f0000b08* CALL LINK OR 00000002              
C 0000048e bf405246  AQW = $29 = $23 SUB 00000014               aqw_sub     vb,fp,20
C 0000048f 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000490 f8a432e3  LINK = f8a432e0                            long_ld     r3,-123456789
C 00000491 f0c02f05  $3 = LINK OR 0000000b              
C 00000492 000004c3* LINK = 000004c0                            long_call   _reverse_integer
C 00000493 f0000b08* CALL LINK OR 00000002              
C 00000494 bf404246  AQW = $29 = $23 SUB 00000010               aqw_sub     vb,fp,16
C 00000495 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000496 00c000c5  $3 = $0 ANDN $0                            ld          r3,0
C 00000497 000004c3* LINK = 000004c0                            long_call   _reverse_integer
C 00000498 f0000b08* CALL LINK OR 00000002              
C 00000499 bf403246  AQW = $29 = $23 SUB 0000000c               aqw_sub     vb,fp,12
C 0000049a 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 0000049b 00cfa205  $3 = $0 ADD 000003e8                       ld          r3,1000
C 0000049c 000004c3* LINK = 000004c0                            long_call   _reverse_integer
C 0000049d f0000b08* CALL LINK OR 00000002              
C 0000049e bf402246  AQW = $29 = $23 SUB 00000008               aqw_sub     vb,fp,8
C 0000049f 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 000004a0 00cf9f45  $3 = $0 ORN 000003e7                       orn         r3,zero,999
C 000004a1 000004c3* LINK = 000004c0                            long_call   _reverse_integer
C 000004a2 f0000b08* CALL LINK OR 00000002              
C 000004a3 bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 000004a4 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 000004a5 bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 000004a6 bf406246  AQW = $29 = $23 SUB 00000018               aqw_sub     vb,fp,24
C 000004a7 efc00605  WQ = $31 = RQ ADD 00000001                 add         wq,rq,1
C 000004a8                                              .L91:
C 000004a8 00401205  $1 = $0 ADD 00000004                       ld          r1,4
C 000004a9 bf406247  AQR = $29 = $23 SUB 00000018               aqr_sub     vb,fp,24
C 000004aa e8800305  $2 = RQ OR 00000000                        ld          r2,rq
C 000004ab 067e0601  $25 = $0 ADD 00000001 LSL 31               lsl         t2,1,31
C 000004ac 0e006585  $24 = $1 XOR $25                           xor         t1,r1,t2
C 000004ad 16406585  $25 = $2 XOR $25                           xor         t2,r2,t2
C 000004ae c7406445  $29 = $24 SUB $25                          sub         vb,t1,t2
C 000004af f800964b  JC PC SUB 00000025                         jc          .L92
C 000004b0 00000213* LINK = 00000210                            aqr_long_ld vb,_wait_after_done
C 000004b1 f7403307* AQR = $29 = LINK OR 0000000c       
C 000004b2 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000004b3 0f400245  $29 = $1 SUB 00000000                      sub         vb,r1,0
C 000004b4 f800220a  JZ PC ADD 00000008                         jz          .L95
C 000004b5 00000213* LINK = 00000210                            aqr_long_ld vb,_s_processor
C 000004b6 f7400307* AQR = $29 = LINK OR 00000000       
C 000004b7 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000004b8 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 000004b9 00000003* LINK = 00000000                            long_call   _task_done
C 000004ba f0000308* CALL LINK OR 00000000              
C 000004bb                                              .L94:
C 000004bb f800020c  J PC ADD 00000000                          j           .L94
C 000004bc                                              .L95:
C 000004bc bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 000004bd e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 000004be edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 000004bf e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 000004c0 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 000004c1 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _task_3, .-_task_3
                                                                .globl  ___modsi3
                                                                .globl  ___divsi3
                                                                .alignw 1
                                                                .globl  _reverse_integer
                                                                .type   _reverse_integer, @function
C 000004c2                                              _reverse_integer:
C 000004c2 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 000004c3 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 000004c4 e7005245  $28 = $28 SUB 00000014                     sub         sp,sp,20
C 000004c5 e7404206  AQW = $29 = $28 ADD 00000010               aqw_add     vb,sp,16
C 000004c6 bfc00305  WQ = $31 = $23 OR 00000000                 ld          wq,fp
C 000004c7 e5c04205  $23 = $28 ADD 00000010                     add         fp,sp,16
C 000004c8 bf404246  AQW = $29 = $23 SUB 00000010               aqw_sub     vb,fp,16
C 000004c9 1fc00305  WQ = $31 = $3 OR 00000000                  ld          wq,r3
C 000004ca bf403246  AQW = $29 = $23 SUB 0000000c               aqw_sub     vb,fp,12
C 000004cb 07c000c5  WQ = $31 = $0 ANDN $0                      ld          wq,0
C 000004cc bf404247  AQR = $29 = $23 SUB 00000010               aqr_sub     vb,fp,16
C 000004cd ef400245  $29 = RQ SUB 00000000                      sub         vb,rq,0
C 000004ce f8001a0d  JNM PC ADD 00000006                        jnm         .L97
C 000004cf bf404247  AQR = $29 = $23 SUB 00000010               aqr_sub     vb,fp,16
C 000004d0 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000004d1 bf402246  AQW = $29 = $23 SUB 00000008               aqw_sub     vb,fp,8
C 000004d2 07c00445  WQ = $31 = $0 SUB $1                       sub         wq,zero,r1
C 000004d3 f800120c  J PC ADD 00000004                          j           .L98
C 000004d4                                              .L97:
C 000004d4 bf404247  AQR = $29 = $23 SUB 00000010               aqr_sub     vb,fp,16
C 000004d5 bf402246  AQW = $29 = $23 SUB 00000008               aqw_sub     vb,fp,8
C 000004d6 efc00305  WQ = $31 = RQ OR 00000000                  ld          wq,rq
C 000004d7                                              .L98:
C 000004d7 bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 000004d8 07c000c5  WQ = $31 = $0 ANDN $0                      ld          wq,0
C 000004d9 f800720c  J PC ADD 0000001c                          j           .L99
C 000004da                                              .L100:
C 000004da bf403247  AQR = $29 = $23 SUB 0000000c               aqr_sub     vb,fp,12
C 000004db e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000004dc 08800405  $2 = $1 ADD $1                             add         r2,r1,r1
C 000004dd 10440301  $1 = $2 OR 00000000 LSL 2                  lsl         r1,r2,2
C 000004de bf403246  AQW = $29 = $23 SUB 0000000c               aqw_sub     vb,fp,12
C 000004df 17c00405  WQ = $31 = $2 ADD $1                       add         wq,r2,r1
C 000004e0 bf402247  AQR = $29 = $23 SUB 00000008               aqr_sub     vb,fp,8
C 000004e1 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000004e2 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 000004e3 01002a05  $4 = $0 ADD 0000000a                       ld          r4,10
C 000004e4 00000003* LINK = 00000000                            long_call   ___modsi3
C 000004e5 f0000308* CALL LINK OR 00000000              
C 000004e6 bf401246  AQW = $29 = $23 SUB 00000004               aqw_sub     vb,fp,4
C 000004e7 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 000004e8 bf402247  AQR = $29 = $23 SUB 00000008               aqr_sub     vb,fp,8
C 000004e9 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000004ea 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 000004eb 01002a05  $4 = $0 ADD 0000000a                       ld          r4,10
C 000004ec 00000003* LINK = 00000000                            long_call   ___divsi3
C 000004ed f0000308* CALL LINK OR 00000000              
C 000004ee bf402246  AQW = $29 = $23 SUB 00000008               aqw_sub     vb,fp,8
C 000004ef 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 000004f0 bf401247  AQR = $29 = $23 SUB 00000004               aqr_sub     vb,fp,4
C 000004f1 e8800305  $2 = RQ OR 00000000                        ld          r2,rq
C 000004f2 bf403247  AQR = $29 = $23 SUB 0000000c               aqr_sub     vb,fp,12
C 000004f3 bf403246  AQW = $29 = $23 SUB 0000000c               aqw_sub     vb,fp,12
C 000004f4 efc00805  WQ = $31 = RQ ADD $2                       add         wq,rq,r2
C 000004f5                                              .L99:
C 000004f5 004000c5  $1 = $0 ANDN $0                            ld          r1,0
C 000004f6 bf402247  AQR = $29 = $23 SUB 00000008               aqr_sub     vb,fp,8
C 000004f7 e8800305  $2 = RQ OR 00000000                        ld          r2,rq
C 000004f8 067e0601  $25 = $0 ADD 00000001 LSL 31               lsl         t2,1,31
C 000004f9 0e006585  $24 = $1 XOR $25                           xor         t1,r1,t2
C 000004fa 16406585  $25 = $2 XOR $25                           xor         t2,r2,t2
C 000004fb c7406445  $29 = $24 SUB $25                          sub         vb,t1,t2
C 000004fc f8008a4f  JNC PC SUB 00000022                        jnc         .L100
C 000004fd bf404247  AQR = $29 = $23 SUB 00000010               aqr_sub     vb,fp,16
C 000004fe ef400245  $29 = RQ SUB 00000000                      sub         vb,rq,0
C 000004ff f800160d  JNM PC ADD 00000005                        jnm         .L101
C 00000500 bf403247  AQR = $29 = $23 SUB 0000000c               aqr_sub     vb,fp,12
C 00000501 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000502 bf403246  AQW = $29 = $23 SUB 0000000c               aqw_sub     vb,fp,12
C 00000503 07c00445  WQ = $31 = $0 SUB $1                       sub         wq,zero,r1
C 00000504                                              .L101:
C 00000504 bf403247  AQR = $29 = $23 SUB 0000000c               aqr_sub     vb,fp,12
C 00000505 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000506 bf000305  $28 = $23 OR 00000000                      ld          sp,fp
C 00000507 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 00000508 edc00305  $23 = RQ OR 00000000                       ld          fp,rq
C 00000509 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 0000050a e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 0000050b e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _reverse_integer, .-_reverse_integer
                                                                .local  _global_processor
                                                                .comm   _global_processor,24,4
                                                                .local  _global_task
                                                                .comm   _global_task,504,4
                                                                .local  _s_processor
                                                                .comm   _s_processor,4,4
                                                                .local  _s_tasks
                                                                .comm   _s_tasks,4,4
                                                                .ident  "GCC: (GNU) 4.3.3"

assume   $0 = 00000000

                        .text + 0000050c     .
                        .text + 000004da     .L100
                        .text + 00000504     .L101
                        .text + 0000009e     .L19
                        .text + 000000d5     .L24
                        .text + 000000d2     .L25
                        .text + 0000013e     .L35
                        .text + 00000148     .L36
                        .text + 00000177     .L39
                        .text + 00000181     .L40
                        .text + 000002a5     .L63
                        .text + 000002a6     .L64
                        .text + 00000345     .L68
                        .text + 000002f1     .L69
                        .text + 000003b8     .L72
                        .text + 000003e6     .L74
                        .text + 000003de     .L75
                        .text + 000003ca     .L76
                        .text + 000003ff     .L77
                        .text + 000003ec     .L78
                        .text + 00000407     .L79
                        .text + 0000003f     .L8
                        .text + 00000439     .L82
                        .text + 0000043a     .L83
                        .text + 00000467     .L85
                        .text + 00000449     .L86
                        .text + 0000047a     .L88
                        .text + 0000047b     .L89
                        .text + 000004a8     .L91
                        .text + 0000048a     .L92
                        .text + 000004bb     .L94
                        .text + 000004bc     .L95
                        .text + 000004d4     .L97
                        .text + 000004d7     .L98
                        .text + 000004f5     .L99
                        .data + 00000030     .LC0
                        .data + 00000036     .LC1
                        .data + 0000003c     .LC2
                        .data + 00000050     .LC3
                             <undefined>  E  ___divsi3
                             <undefined>  E  ___modsi3
                             <undefined>  E  ___umodsi3
                             <undefined>  E  _cache_flush
                        .text + 00000117     _cache_flushMem
                             <undefined>  E  _cache_invalidate
                        .text + 00000150     _cache_invalidateMem
                        .text + 000000f2     _cacheAlign
                        .data + 00000010     _cacheControl
                        .text + 000000e1     _cacheLineAddress
                        .text + 00000106     _cacheMultiple
                        .data + 0000002c  G  _CLOCK_TO_MS
                        .text + 00000026     _clockFrequency
                        .text + 00000000     _corenum
                        .text + 000001d8     _counters_readAndZero
                        .text + 000001ba     _counters_start
                        .text + 000001c9     _counters_stop
                        .data + 00000004     _cycleCounter
                        .text + 00000013     _enetCorenum
                        .text + 00000189     _getSaveArea
                         .bss + 00000000     _global_processor
                         .bss + 00000018     _global_task
                        .text + 000000c9     _icSema_P
                        .text + 000000b0     _icSema_tryP
                        .text + 00000090     _icSleep
                        .text + 000002c0  G  _init_tasks
                             <undefined>  E  _init_tasks_priority
                             <undefined>  E  _isr
                        .text + 00000227  G  _mc_init
                        .text + 00000233  G  _mc_main
                        .text + 00000080     _message_len
                        .text + 0000005e     _message_srce
                        .text + 0000006f     _message_type
                        .data + 0000000c     _miscIO
                        .data + 00000014     _msgControl
                        .data + 00000008     _multiplier
                        .data + 00000044  G  _names
                             <undefined>  E  _new_processor
                             <undefined>  E  _new_tasks
                             <undefined>  E  _putchar
                             <undefined>  E  _puts
                             <undefined>  E  _rawWrite
                        .text + 00000218     _read_epc
                        .text + 00000209     _read_handlerR
                        .text + 000001eb     _read_mask
                        .text + 000001fa     _read_timeIntervals
                        .text + 0000004d     _releaseRS232
                        .text + 000004c2  G  _reverse_integer
                             <undefined>  E  _rm_schedule
                        .data + 00000000     _rs232
                         .bss + 00000210     _s_processor
                         .bss + 00000214     _s_tasks
                             <undefined>  E  _saveArea
                        .text + 0000037c  G  _schedule
                        .data + 00000018     _semaControl
                             <undefined>  E  _set_handlerR
                             <undefined>  E  _set_mask
                             <undefined>  E  _set_tasks
                             <undefined>  E  _set_timerInterval
                        .text + 000001a4     _setFrameBuffer
                             <undefined>  E  _sfb_internal
                        .text + 0000040d  G  _task_1
                        .text + 00000440  G  _task_2
                        .text + 00000481  G  _task_3
                             <undefined>  E  _task_done
                        .text + 000002ac  G  _test_func_execute_time
                         .bss + 00000218     _timer
                        .data + 00000028     _timerInerruptControl_epc
                        .data + 00000024     _timerInerruptControl_handlerR
                        .data + 0000001c     _timerInerruptControl_mask
                        .data + 00000020     _timerInerruptControl_timeInterval
                         .bss + 0000021c     _wait_after_done
                        .text + 00000039     _waitRS232Out
                                00000000     code.rota
                                00000001     code.step
                                00000002     data.rota
                                00000004     data.step
                                     $23     fp
                                    link     link
                                     $27     p1
                                      pc     pc
                                      $1     r1
                                     $10     r10
                                     $11     r11
                                     $12     r12
                                     $13     r13
                                     $14     r14
                                     $15     r15
                                     $16     r16
                                     $17     r17
                                     $18     r18
                                     $19     r19
                                      $2     r2
                                     $20     r20
                                     $21     r21
                                     $22     r22
                                      $3     r3
                                      $4     r4
                                      $5     r5
                                      $6     r6
                                      $7     r7
                                      $8     r8
                                      $9     r9
                                      rq     rq
                                     $28     sp
                                     $24     t1
                                     $25     t2
                                     $26     t3
                                     $29     vb
                                      $0     void
                                      wq     wq
                                      $0     zero
