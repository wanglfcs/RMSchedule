                                                        // BEEHIVE GCC 2010.07.09.18.09  (no pre-modify) (mult)
                                                        // ------------------------------------------------------------
                                                        // Standard as definitions
                                                        
$0                                                      zero = $0    // fixed zero
$0                                                      void = $0    // void destination
$1                                                      r1 = $1      // function return value
$2                                                      r2 = $2      // not callee save
$3                                                      r3 = $3      // not callee save, function argument 1
$4                                                      r4 = $4      // not callee save, function argument 2
$5                                                      r5 = $5      // not callee save, function argument 3
$6                                                      r6 = $6      // not callee save, function argument 4
$7                                                      r7 = $7      // not callee save, function argument 5
$8                                                      r8 = $8      // not callee save, function argument 6
$9                                                      r9 = $9      // callee save
$10                                                     r10 = $10    // callee save
$11                                                     r11 = $11    // callee save
$12                                                     r12 = $12    // callee save
$13                                                     r13 = $13    // callee save
$14                                                     r14 = $14    // callee save
$15                                                     r15 = $15    // callee save
$16                                                     r16 = $16    // callee save
$17                                                     r17 = $17    // callee save
$18                                                     r18 = $18    // callee save
$19                                                     r19 = $19    // callee save
$20                                                     r20 = $20    // callee save
$21                                                     r21 = $21    // callee save
$22                                                     r22 = $22    // callee save
$23                                                     fp = $23     // callee save, frame pointer
$24                                                     t1 = $24     // not callee save, temporary 1, not avail for reg alloc
$25                                                     t2 = $25     // not callee save, temporary 2, not avail for reg alloc
$26                                                     t3 = $26     // not callee save, temporary 3, not avail for reg alloc
$27                                                     p1 = $27     // not callee save, platform 1, not avail for reg alloc
$28                                                     sp = $28     // callee save, stack pointer
$29                                                     vb = $29     // not callee save, rw & rb only, not avail for reg alloc
                                                        
  00000000                                                  .assume   zero,0
                                                        
                                                        // ------------------------------------------------------------
                                                                .file   "main.c"
                                                                .code
                                                                .alignw 1
                                                                .globl  _mc_init
                                                                .type   _mc_init, @function
C 00000000                                              _mc_init:
C 00000000 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000001 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000002 e7000207  AQR = $28 = $28 ADD 00000000               aqr_add     sp,sp,0
C 00000003 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000004 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _mc_init, .-_mc_init
                                                                .alignw 1
                                                                .globl  _test_func_execute_time
                                                                .type   _test_func_execute_time, @function
C 00000005                                              _test_func_execute_time:
C 00000005 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000006 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000007 1f400307  AQR = $29 = $3 OR 00000000                 aqr_ld      vb,r3
C 00000008 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000009 08000308  CALL $1 OR 00000000                        call        r1
C 0000000a 00401605  $1 = $0 ADD 00000005                       ld          r1,5
C 0000000b e7000207  AQR = $28 = $28 ADD 00000000               aqr_add     sp,sp,0
C 0000000c e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 0000000d e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _test_func_execute_time, .-_test_func_execute_time
                                                                .globl  ___modsi3
                                                                .globl  ___divsi3
                                                                .alignw 1
                                                                .globl  _reverse_integer
                                                                .type   _reverse_integer, @function
C 0000000e                                              _reverse_integer:
C 0000000e e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 0000000f f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000010 e7006245  $28 = $28 SUB 00000018                     sub         sp,sp,24
C 00000011 e7405206  AQW = $29 = $28 ADD 00000014               aqw_add     vb,sp,20
C 00000012 77c00305  WQ = $31 = $14 OR 00000000                 ld          wq,r14
C 00000013 e7404206  AQW = $29 = $28 ADD 00000010               aqw_add     vb,sp,16
C 00000014 6fc00305  WQ = $31 = $13 OR 00000000                 ld          wq,r13
C 00000015 e7403206  AQW = $29 = $28 ADD 0000000c               aqw_add     vb,sp,12
C 00000016 67c00305  WQ = $31 = $12 OR 00000000                 ld          wq,r12
C 00000017 e7402206  AQW = $29 = $28 ADD 00000008               aqw_add     vb,sp,8
C 00000018 5fc00305  WQ = $31 = $11 OR 00000000                 ld          wq,r11
C 00000019 e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 0000001a 57c00305  WQ = $31 = $10 OR 00000000                 ld          wq,r10
C 0000001b e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 0000001c 4fc00305  WQ = $31 = $9 OR 00000000                  ld          wq,r9
C 0000001d 1b800305  $14 = $3 OR 00000000                       ld          r14,r3
C 0000001e 187e0304  $1 = $3 OR 00000000 ASR 31                 asr         r1,r3,31
C 0000001f 0ac00d85  $11 = $1 XOR $3                            xor         r11,r1,r3
C 00000020 5ac00445  $11 = $11 SUB $1                           sub         r11,r11,r1
C 00000021 5f400245  $29 = $11 SUB 00000000                     sub         vb,r11,0
C 00000022 f800a20a  JZ PC ADD 00000028                         jz          .L13
C 00000023 004000c5  $1 = $0 ANDN $0                            ld          r1,0
C 00000024 00000003* LINK = 00000000                            long_ld     r13,___modsi3
C 00000025 f3400305* $13 = LINK OR 00000000             
C 00000026 00000003* LINK = 00000000                            long_ld     r12,___divsi3
C 00000027 f3000305* $12 = LINK OR 00000000             
C 00000028                                              .L8:
C 00000028 0a400405  $9 = $1 ADD $1                             add         r9,r1,r1
C 00000029 08460301  $1 = $1 OR 00000000 LSL 3                  lsl         r1,r1,3
C 0000002a 4a400405  $9 = $9 ADD $1                             add         r9,r9,r1
C 0000002b 58c00305  $3 = $11 OR 00000000                       ld          r3,r11
C 0000002c 01002a05  $4 = $0 ADD 0000000a                       ld          r4,10
C 0000002d 68000308  CALL $13 OR 00000000                       call        r13
C 0000002e 0a800305  $10 = $1 OR 00000000                       ld          r10,r1
C 0000002f 58c00305  $3 = $11 OR 00000000                       ld          r3,r11
C 00000030 01002a05  $4 = $0 ADD 0000000a                       ld          r4,10
C 00000031 60000308  CALL $12 OR 00000000                       call        r12
C 00000032 0ac00305  $11 = $1 OR 00000000                       ld          r11,r1
C 00000033 50402405  $1 = $10 ADD $9                            add         r1,r10,r9
C 00000034 5f400245  $29 = $11 SUB 00000000                     sub         vb,r11,0
C 00000035 f800364e  JNZ PC SUB 0000000d                        jnz         .L8
C 00000036 08800305  $2 = $1 OR 00000000                        ld          r2,r1
C 00000037                                              .L7:
C 00000037 77400245  $29 = $14 SUB 00000000                     sub         vb,r14,0
C 00000038 f8000a0d  JNM PC ADD 00000002                        jnm         .L9
C 00000039 00800445  $2 = $0 SUB $1                             sub         r2,zero,r1
C 0000003a                                              .L9:
C 0000003a 10400305  $1 = $2 OR 00000000                        ld          r1,r2
C 0000003b e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 0000003c ea400305  $9 = RQ OR 00000000                        ld          r9,rq
C 0000003d e7401207  AQR = $29 = $28 ADD 00000004               aqr_add     vb,sp,4
C 0000003e ea800305  $10 = RQ OR 00000000                       ld          r10,rq
C 0000003f e7402207  AQR = $29 = $28 ADD 00000008               aqr_add     vb,sp,8
C 00000040 eac00305  $11 = RQ OR 00000000                       ld          r11,rq
C 00000041 e7403207  AQR = $29 = $28 ADD 0000000c               aqr_add     vb,sp,12
C 00000042 eb000305  $12 = RQ OR 00000000                       ld          r12,rq
C 00000043 e7404207  AQR = $29 = $28 ADD 00000010               aqr_add     vb,sp,16
C 00000044 eb400305  $13 = RQ OR 00000000                       ld          r13,rq
C 00000045 e7405207  AQR = $29 = $28 ADD 00000014               aqr_add     vb,sp,20
C 00000046 eb800305  $14 = RQ OR 00000000                       ld          r14,rq
C 00000047 e7006207  AQR = $28 = $28 ADD 00000018               aqr_add     sp,sp,24
C 00000048 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000049 e800030c  J RQ OR 00000000                           j           rq
C 0000004a                                              .L13:
C 0000004a 58400305  $1 = $11 OR 00000000                       ld          r1,r11
C 0000004b 58800305  $2 = $11 OR 00000000                       ld          r2,r11
C 0000004c f800564c  J PC SUB 00000015                          j           .L7
                                                                .size   _reverse_integer, .-_reverse_integer
                                                                .alignw 1
                                                                .globl  _task_3
                                                                .type   _task_3, @function
C 0000004d                                              _task_3:
C 0000004d e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 0000004e f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 0000004f e7002245  $28 = $28 SUB 00000008                     sub         sp,sp,8
C 00000050 e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 00000051 57c00305  WQ = $31 = $10 OR 00000000                 ld          wq,r10
C 00000052 e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 00000053 4fc00305  WQ = $31 = $9 OR 00000000                  ld          wq,r9
C 00000054 024000c5  $9 = $0 ANDN $0                            ld          r9,0
C 00000055 00000003* LINK = 00000000                            long_ld     r10,_reverse_integer
C 00000056 f2803b05* $10 = LINK OR 0000000e             
C 00000057                                              .L15:
C 00000057 075bcd13  LINK = 075bcd10                            long_ld     r3,123456789
C 00000058 f0c01705  $3 = LINK OR 00000005              
C 00000059 50000308  CALL $10 OR 00000000                       call        r10
C 0000005a f8a432e3  LINK = f8a432e0                            long_ld     r3,-123456789
C 0000005b f0c02f05  $3 = LINK OR 0000000b              
C 0000005c 50000308  CALL $10 OR 00000000                       call        r10
C 0000005d 00c000c5  $3 = $0 ANDN $0                            ld          r3,0
C 0000005e 50000308  CALL $10 OR 00000000                       call        r10
C 0000005f 00cfa205  $3 = $0 ADD 000003e8                       ld          r3,1000
C 00000060 50000308  CALL $10 OR 00000000                       call        r10
C 00000061 00cf9f45  $3 = $0 ORN 000003e7                       orn         r3,zero,999
C 00000062 50000308  CALL $10 OR 00000000                       call        r10
C 00000063 4a400605  $9 = $9 ADD 00000001                       add         r9,r9,1
C 00000064 00401605  $1 = $0 ADD 00000005                       ld          r1,5
C 00000065 4f400445  $29 = $9 SUB $1                            sub         vb,r9,r1
C 00000066 f8003e4e  JNZ PC SUB 0000000f                        jnz         .L15
C 00000067 00000003* LINK = 00000000                            aqr_long_ld vb,_wait_after_done
C 00000068 f7403307* AQR = $29 = LINK OR 0000000c       
C 00000069 ef400245  $29 = RQ SUB 00000000                      sub         vb,rq,0
C 0000006a f800220e  JNZ PC ADD 00000008                        jnz         .L20
C 0000006b e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 0000006c ea400305  $9 = RQ OR 00000000                        ld          r9,rq
C 0000006d e7401207  AQR = $29 = $28 ADD 00000004               aqr_add     vb,sp,4
C 0000006e ea800305  $10 = RQ OR 00000000                       ld          r10,rq
C 0000006f e7002207  AQR = $28 = $28 ADD 00000008               aqr_add     sp,sp,8
C 00000070 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000071 e800030c  J RQ OR 00000000                           j           rq
C 00000072                                              .L20:
C 00000072 00000003* LINK = 00000000                            aqr_long_ld vb,_s_processor
C 00000073 f7400307* AQR = $29 = LINK OR 00000000       
C 00000074 e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 00000075 00000003* LINK = 00000000                            long_call   _task_done
C 00000076 f0000308* CALL LINK OR 00000000              
C 00000077                                              .L17:
C 00000077 f800020c  J PC ADD 00000000                          j           .L17
                                                                .size   _task_3, .-_task_3
                                                                .alignw 1
                                                                .globl  _task_2
                                                                .type   _task_2, @function
C 00000078                                              _task_2:
C 00000078 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000079 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 0000007a e7002245  $28 = $28 SUB 00000008                     sub         sp,sp,8
C 0000007b e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 0000007c 57c00305  WQ = $31 = $10 OR 00000000                 ld          wq,r10
C 0000007d e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 0000007e 4fc00305  WQ = $31 = $9 OR 00000000                  ld          wq,r9
C 0000007f 024000c5  $9 = $0 ANDN $0                            ld          r9,0
C 00000080 00000003* LINK = 00000000                            long_ld     r10,_reverse_integer
C 00000081 f2803b05* $10 = LINK OR 0000000e             
C 00000082                                              .L22:
C 00000082 075bcd13  LINK = 075bcd10                            long_ld     r3,123456789
C 00000083 f0c01705  $3 = LINK OR 00000005              
C 00000084 50000308  CALL $10 OR 00000000                       call        r10
C 00000085 f8a432e3  LINK = f8a432e0                            long_ld     r3,-123456789
C 00000086 f0c02f05  $3 = LINK OR 0000000b              
C 00000087 50000308  CALL $10 OR 00000000                       call        r10
C 00000088 00c000c5  $3 = $0 ANDN $0                            ld          r3,0
C 00000089 50000308  CALL $10 OR 00000000                       call        r10
C 0000008a 00cfa205  $3 = $0 ADD 000003e8                       ld          r3,1000
C 0000008b 50000308  CALL $10 OR 00000000                       call        r10
C 0000008c 00cf9f45  $3 = $0 ORN 000003e7                       orn         r3,zero,999
C 0000008d 50000308  CALL $10 OR 00000000                       call        r10
C 0000008e 4a400605  $9 = $9 ADD 00000001                       add         r9,r9,1
C 0000008f 00400e05  $1 = $0 ADD 00000003                       ld          r1,3
C 00000090 4f400445  $29 = $9 SUB $1                            sub         vb,r9,r1
C 00000091 f8003e4e  JNZ PC SUB 0000000f                        jnz         .L22
C 00000092 00000003* LINK = 00000000                            aqr_long_ld vb,_wait_after_done
C 00000093 f7403307* AQR = $29 = LINK OR 0000000c       
C 00000094 ef400245  $29 = RQ SUB 00000000                      sub         vb,rq,0
C 00000095 f800220e  JNZ PC ADD 00000008                        jnz         .L27
C 00000096 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 00000097 ea400305  $9 = RQ OR 00000000                        ld          r9,rq
C 00000098 e7401207  AQR = $29 = $28 ADD 00000004               aqr_add     vb,sp,4
C 00000099 ea800305  $10 = RQ OR 00000000                       ld          r10,rq
C 0000009a e7002207  AQR = $28 = $28 ADD 00000008               aqr_add     sp,sp,8
C 0000009b e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 0000009c e800030c  J RQ OR 00000000                           j           rq
C 0000009d                                              .L27:
C 0000009d 00000003* LINK = 00000000                            aqr_long_ld vb,_s_processor
C 0000009e f7400307* AQR = $29 = LINK OR 00000000       
C 0000009f e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 000000a0 00000003* LINK = 00000000                            long_call   _task_done
C 000000a1 f0000308* CALL LINK OR 00000000              
C 000000a2                                              .L24:
C 000000a2 f800020c  J PC ADD 00000000                          j           .L24
                                                                .size   _task_2, .-_task_2
                                                                .alignw 1
                                                                .globl  _task_1
                                                                .type   _task_1, @function
C 000000a3                                              _task_1:
C 000000a3 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 000000a4 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 000000a5 e7001245  $28 = $28 SUB 00000004                     sub         sp,sp,4
C 000000a6 e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 000000a7 4fc00305  WQ = $31 = $9 OR 00000000                  ld          wq,r9
C 000000a8 00000003* LINK = 00000000                            long_ld     r9,_reverse_integer
C 000000a9 f2403b05* $9 = LINK OR 0000000e              
C 000000aa 075bcd13  LINK = 075bcd10                            long_ld     r3,123456789
C 000000ab f0c01705  $3 = LINK OR 00000005              
C 000000ac 48000308  CALL $9 OR 00000000                        call        r9
C 000000ad f8a432e3  LINK = f8a432e0                            long_ld     r3,-123456789
C 000000ae f0c02f05  $3 = LINK OR 0000000b              
C 000000af 48000308  CALL $9 OR 00000000                        call        r9
C 000000b0 00c000c5  $3 = $0 ANDN $0                            ld          r3,0
C 000000b1 48000308  CALL $9 OR 00000000                        call        r9
C 000000b2 00cfa205  $3 = $0 ADD 000003e8                       ld          r3,1000
C 000000b3 48000308  CALL $9 OR 00000000                        call        r9
C 000000b4 00cf9f45  $3 = $0 ORN 000003e7                       orn         r3,zero,999
C 000000b5 48000308  CALL $9 OR 00000000                        call        r9
C 000000b6 00000003* LINK = 00000000                            aqr_long_ld vb,_wait_after_done
C 000000b7 f7403307* AQR = $29 = LINK OR 0000000c       
C 000000b8 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000000b9 00800605  $2 = $0 ADD 00000001                       ld          r2,1
C 000000ba 0f400845  $29 = $1 SUB $2                            sub         vb,r1,r2
C 000000bb f8001a0a  JZ PC ADD 00000006                         jz          .L32
C 000000bc e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 000000bd ea400305  $9 = RQ OR 00000000                        ld          r9,rq
C 000000be e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 000000bf e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 000000c0 e800030c  J RQ OR 00000000                           j           rq
C 000000c1                                              .L32:
C 000000c1 00000003* LINK = 00000000                            aqr_long_ld vb,_s_processor
C 000000c2 f7400307* AQR = $29 = LINK OR 00000000       
C 000000c3 e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 000000c4 00000003* LINK = 00000000                            long_call   _task_done
C 000000c5 f0000308* CALL LINK OR 00000000              
C 000000c6                                              .L30:
C 000000c6 f800020c  J PC ADD 00000000                          j           .L30
                                                                .size   _task_1, .-_task_1
                                                                .globl  ___umodsi3
                                                                .alignw 1
                                                                .globl  _schedule
                                                                .type   _schedule, @function
C 000000c7                                              _schedule:
C 000000c7 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 000000c8 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 000000c9 e7004245  $28 = $28 SUB 00000010                     sub         sp,sp,16
C 000000ca e7403206  AQW = $29 = $28 ADD 0000000c               aqw_add     vb,sp,12
C 000000cb 67c00305  WQ = $31 = $12 OR 00000000                 ld          wq,r12
C 000000cc e7402206  AQW = $29 = $28 ADD 00000008               aqw_add     vb,sp,8
C 000000cd 5fc00305  WQ = $31 = $11 OR 00000000                 ld          wq,r11
C 000000ce e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 000000cf 57c00305  WQ = $31 = $10 OR 00000000                 ld          wq,r10
C 000000d0 e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 000000d1 4fc00305  WQ = $31 = $9 OR 00000000                  ld          wq,r9
C 000000d2 07400a07  AQR = $29 = $0 ADD 00000002                aqr_ld      vb,2
C 000000d3 eb000305  $12 = RQ OR 00000000                       ld          r12,rq
C 000000d4 00000003* LINK = 00000000                            aqr_long_ld vb,_s_processor
C 000000d5 f7400307* AQR = $29 = LINK OR 00000000       
C 000000d6 e9000305  $4 = RQ OR 00000000                        ld          r4,rq
C 000000d7 27405207  AQR = $29 = $4 ADD 00000014                aqr_add     vb,r4,20
C 000000d8 ea400305  $9 = RQ OR 00000000                        ld          r9,rq
C 000000d9 00000003* LINK = 00000000                            aqr_long_ld vb,_timer
C 000000da f7402307* AQR = $29 = LINK OR 00000008       
C 000000db e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 000000dc 00000003* LINK = 00000000                            long_call   _rm_schedule
C 000000dd f0000308* CALL LINK OR 00000000              
C 000000de 0a800305  $10 = $1 OR 00000000                       ld          r10,r1
C 000000df 00000003* LINK = 00000000                            aqr_long_ld vb,_timer
C 000000e0 f7402307* AQR = $29 = LINK OR 00000008       
C 000000e1 e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 000000e2 01002a05  $4 = $0 ADD 0000000a                       ld          r4,10
C 000000e3 00000003* LINK = 00000000                            long_call   ___umodsi3
C 000000e4 f0000308* CALL LINK OR 00000000              
C 000000e5 00000003* LINK = 00000000                            long_ld     r11,_putchar
C 000000e6 f2c00305* $11 = LINK OR 00000000             
C 000000e7 08c0c205  $3 = $1 ADD 00000030                       add         r3,r1,48
C 000000e8 58000308  CALL $11 OR 00000000                       call        r11
C 000000e9 00c02a05  $3 = $0 ADD 0000000a                       ld          r3,10
C 000000ea 58000308  CALL $11 OR 00000000                       call        r11
C 000000eb 57400245  $29 = $10 SUB 00000000                     sub         vb,r10,0
C 000000ec f8001e0a  JZ PC ADD 00000007                         jz          .L34
C 000000ed 57400307  AQR = $29 = $10 OR 00000000                aqr_ld      vb,r10
C 000000ee e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 000000ef 00000003* LINK = 00000000                            long_call   _puts
C 000000f0 f0000308* CALL LINK OR 00000000              
C 000000f1 00c1be05  $3 = $0 ADD 0000006f                       ld          r3,111
C 000000f2 58000308  CALL $11 OR 00000000                       call        r11
C 000000f3                                              .L34:
C 000000f3 00000003* LINK = 00000000                            aqr_long_ld vb,_timer
C 000000f4 f7402307* AQR = $29 = LINK OR 00000008       
C 000000f5 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000000f6 08400605  $1 = $1 ADD 00000001                       add         r1,r1,1
C 000000f7 00000003* LINK = 00000000                            aqw_long_ld vb,_timer
C 000000f8 f7402306* AQW = $29 = LINK OR 00000008       
C 000000f9 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 000000fa 4f402845  $29 = $9 SUB $10                           sub         vb,r9,r10
C 000000fb f8008a0a  JZ PC ADD 00000022                         jz          .L39
C 000000fc 60540300  $1 = $12 OR 00000000 LSR 10                lsr         r1,r12,10
C 000000fd 08403e85  $1 = $1 AND 0000000f                       and         r1,r1,15
C 000000fe 08408205  $1 = $1 ADD 00000020                       add         r1,r1,32
C 000000ff 09520301  $5 = $1 OR 00000000 LSL 9                  lsl         r5,r1,9
C 00000100 4f400245  $29 = $9 SUB 00000000                      sub         vb,r9,0
C 00000101 f8003a0a  JZ PC ADD 0000000e                         jz          .L36
C 00000102 29000305  $4 = $5 OR 00000000                        ld          r4,r5
C 00000103 00c000c5  $3 = $0 ANDN $0                            ld          r3,0
C 00000104                                              .L37:
C 00000104 27400307  AQR = $29 = $4 OR 00000000                 aqr_ld      vb,r4
C 00000105 e8800305  $2 = RQ OR 00000000                        ld          r2,rq
C 00000106 18402205  $1 = $3 ADD 00000008                       add         r1,r3,8
C 00000107 08440301  $1 = $1 OR 00000000 LSL 2                  lsl         r1,r1,2
C 00000108 4f400406  AQW = $29 = $9 ADD $1                      aqw_add     vb,r9,r1
C 00000109 17c00305  WQ = $31 = $2 OR 00000000                  ld          wq,r2
C 0000010a 18c00605  $3 = $3 ADD 00000001                       add         r3,r3,1
C 0000010b 21001205  $4 = $4 ADD 00000004                       add         r4,r4,4
C 0000010c 00408205  $1 = $0 ADD 00000020                       ld          r1,32
C 0000010d 1f400445  $29 = $3 SUB $1                            sub         vb,r3,r1
C 0000010e f8002a4e  JNZ PC SUB 0000000a                        jnz         .L37
C 0000010f                                              .L36:
C 0000010f 57400245  $29 = $10 SUB 00000000                     sub         vb,r10,0
C 00000110 f800360a  JZ PC ADD 0000000d                         jz          .L39
C 00000111 008000c5  $2 = $0 ANDN $0                            ld          r2,0
C 00000112                                              .L38:
C 00000112 10402205  $1 = $2 ADD 00000008                       add         r1,r2,8
C 00000113 08440301  $1 = $1 OR 00000000 LSL 2                  lsl         r1,r1,2
C 00000114 57400407  AQR = $29 = $10 ADD $1                     aqr_add     vb,r10,r1
C 00000115 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000116 2f400306  AQW = $29 = $5 OR 00000000                 aqw_ld      vb,r5
C 00000117 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 00000118 10800605  $2 = $2 ADD 00000001                       add         r2,r2,1
C 00000119 29401205  $5 = $5 ADD 00000004                       add         r5,r5,4
C 0000011a 00408205  $1 = $0 ADD 00000020                       ld          r1,32
C 0000011b 17400445  $29 = $2 SUB $1                            sub         vb,r2,r1
C 0000011c f8002a4e  JNZ PC SUB 0000000a                        jnz         .L38
C 0000011d                                              .L39:
C 0000011d e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 0000011e ea400305  $9 = RQ OR 00000000                        ld          r9,rq
C 0000011f e7401207  AQR = $29 = $28 ADD 00000004               aqr_add     vb,sp,4
C 00000120 ea800305  $10 = RQ OR 00000000                       ld          r10,rq
C 00000121 e7402207  AQR = $29 = $28 ADD 00000008               aqr_add     vb,sp,8
C 00000122 eac00305  $11 = RQ OR 00000000                       ld          r11,rq
C 00000123 e7403207  AQR = $29 = $28 ADD 0000000c               aqr_add     vb,sp,12
C 00000124 eb000305  $12 = RQ OR 00000000                       ld          r12,rq
C 00000125 e7004207  AQR = $28 = $28 ADD 00000010               aqr_add     sp,sp,16
C 00000126 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000127 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _schedule, .-_schedule
                                                                .alignw 1
                                                                .globl  _init_tasks
                                                                .type   _init_tasks, @function
C 00000128                                              _init_tasks:
C 00000128 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000129 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 0000012a e700b245  $28 = $28 SUB 0000002c                     sub         sp,sp,44
C 0000012b e7407206  AQW = $29 = $28 ADD 0000001c               aqw_add     vb,sp,28
C 0000012c 87c00305  WQ = $31 = $16 OR 00000000                 ld          wq,r16
C 0000012d e7406206  AQW = $29 = $28 ADD 00000018               aqw_add     vb,sp,24
C 0000012e 7fc00305  WQ = $31 = $15 OR 00000000                 ld          wq,r15
C 0000012f e7405206  AQW = $29 = $28 ADD 00000014               aqw_add     vb,sp,20
C 00000130 77c00305  WQ = $31 = $14 OR 00000000                 ld          wq,r14
C 00000131 e7404206  AQW = $29 = $28 ADD 00000010               aqw_add     vb,sp,16
C 00000132 6fc00305  WQ = $31 = $13 OR 00000000                 ld          wq,r13
C 00000133 e7403206  AQW = $29 = $28 ADD 0000000c               aqw_add     vb,sp,12
C 00000134 67c00305  WQ = $31 = $12 OR 00000000                 ld          wq,r12
C 00000135 e7402206  AQW = $29 = $28 ADD 00000008               aqw_add     vb,sp,8
C 00000136 5fc00305  WQ = $31 = $11 OR 00000000                 ld          wq,r11
C 00000137 e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 00000138 57c00305  WQ = $31 = $10 OR 00000000                 ld          wq,r10
C 00000139 e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 0000013a 4fc00305  WQ = $31 = $9 OR 00000000                  ld          wq,r9
C 0000013b 1c000305  $16 = $3 OR 00000000                       ld          r16,r3
C 0000013c 23400305  $13 = $4 OR 00000000                       ld          r13,r4
C 0000013d 2b000305  $12 = $5 OR 00000000                       ld          r12,r5
C 0000013e 00000003* LINK = 00000000                            long_ld     r11,_putchar
C 0000013f f2c00305* $11 = LINK OR 00000000             
C 00000140 00c02a05  $3 = $0 ADD 0000000a                       ld          r3,10
C 00000141 58000308  CALL $11 OR 00000000                       call        r11
C 00000142 60c0c205  $3 = $12 ADD 00000030                      add         r3,r12,48
C 00000143 58000308  CALL $11 OR 00000000                       call        r11
C 00000144 00c02a05  $3 = $0 ADD 0000000a                       ld          r3,10
C 00000145 58000308  CALL $11 OR 00000000                       call        r11
C 00000146 e740a206  AQW = $29 = $28 ADD 00000028               aqw_add     vb,sp,40
C 00000147 000000a3* LINK = 000000a0                            long_ld     wq,_task_1
C 00000148 f7c00f05* WQ = $31 = LINK OR 00000003        
C 00000149 e040b205  $1 = $28 ADD 0000002c                      add         r1,sp,44
C 0000014a 6f407206  AQW = $29 = $13 ADD 0000001c               aqw_add     vb,r13,28
C 0000014b 0fc01245  WQ = $31 = $1 SUB 00000004                 sub         wq,r1,4
C 0000014c e7409206  AQW = $29 = $28 ADD 00000024               aqw_add     vb,sp,36
C 0000014d 00000073* LINK = 00000070                            long_ld     wq,_task_2
C 0000014e f7c02305* WQ = $31 = LINK OR 00000008        
C 0000014f 6bc2a205  $15 = $13 ADD 000000a8                     add         r15,r13,168
C 00000150 7f407206  AQW = $29 = $15 ADD 0000001c               aqw_add     vb,r15,28
C 00000151 0fc02245  WQ = $31 = $1 SUB 00000008                 sub         wq,r1,8
C 00000152 e7408206  AQW = $29 = $28 ADD 00000020               aqw_add     vb,sp,32
C 00000153 00000043* LINK = 00000040                            long_ld     wq,_task_3
C 00000154 f7c03705* WQ = $31 = LINK OR 0000000d        
C 00000155 6b854205  $14 = $13 ADD 00000150                     add         r14,r13,336
C 00000156 77407206  AQW = $29 = $14 ADD 0000001c               aqw_add     vb,r14,28
C 00000157 0fc03245  WQ = $31 = $1 SUB 0000000c                 sub         wq,r1,12
C 00000158 004000c5  $1 = $0 ANDN $0                            ld          r1,0
C 00000159 067e0601  $25 = $0 ADD 00000001 LSL 31               lsl         t2,1,31
C 0000015a 0e006585  $24 = $1 XOR $25                           xor         t1,r1,t2
C 0000015b 66406585  $25 = $12 XOR $25                          xor         t2,r12,t2
C 0000015c c7406445  $29 = $24 SUB $25                          sub         vb,t1,t2
C 0000015d f8006e0b  JC PC ADD 0000001b                         jc          .L43
C 0000015e 6a400305  $9 = $13 OR 00000000                       ld          r9,r13
C 0000015f 0a800305  $10 = $1 OR 00000000                       ld          r10,r1
C 00000160                                              .L44:
C 00000160 00c19605  $3 = $0 ADD 00000065                       ld          r3,101
C 00000161 58000308  CALL $11 OR 00000000                       call        r11
C 00000162 4f407207  AQR = $29 = $9 ADD 0000001c                aqr_add     vb,r9,28
C 00000163 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000164 0f400307  AQR = $29 = $1 OR 00000000                 aqr_ld      vb,r1
C 00000165 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 00000166 08000308  CALL $1 OR 00000000                        call        r1
C 00000167 4f403206  AQW = $29 = $9 ADD 0000000c                aqw_add     vb,r9,12
C 00000168 07c01605  WQ = $31 = $0 ADD 00000005                 ld          wq,5
C 00000169 4f402206  AQW = $29 = $9 ADD 00000008                aqw_add     vb,r9,8
C 0000016a 07c06605  WQ = $31 = $0 ADD 00000019                 ld          wq,25
C 0000016b 4f426206  AQW = $29 = $9 ADD 00000098                aqw_add     vb,r9,152
C 0000016c 00000003* LINK = 00000000                            long_ld     wq,_isr
C 0000016d f7c00305* WQ = $31 = LINK OR 00000000        
C 0000016e 4f401207  AQR = $29 = $9 ADD 00000004                aqr_add     vb,r9,4
C 0000016f e8c0c205  $3 = RQ ADD 00000030                       add         r3,rq,48
C 00000170 58000308  CALL $11 OR 00000000                       call        r11
C 00000171 52800605  $10 = $10 ADD 00000001                     add         r10,r10,1
C 00000172 4a42a205  $9 = $9 ADD 000000a8                       add         r9,r9,168
C 00000173 067e0601  $25 = $0 ADD 00000001 LSL 31               lsl         t2,1,31
C 00000174 56006585  $24 = $10 XOR $25                          xor         t1,r10,t2
C 00000175 66406585  $25 = $12 XOR $25                          xor         t2,r12,t2
C 00000176 c7406445  $29 = $24 SUB $25                          sub         vb,t1,t2
C 00000177 f8005e4f  JNC PC SUB 00000017                        jnc         .L44
C 00000178                                              .L43:
C 00000178 6f427206  AQW = $29 = $13 ADD 0000009c               aqw_add     vb,r13,156
C 00000179 000000a3* LINK = 000000a0                            long_ld     wq,_task_1
C 0000017a f7c00f05* WQ = $31 = LINK OR 00000003        
C 0000017b 7f427206  AQW = $29 = $15 ADD 0000009c               aqw_add     vb,r15,156
C 0000017c 00000073* LINK = 00000070                            long_ld     wq,_task_2
C 0000017d f7c02305* WQ = $31 = LINK OR 00000008        
C 0000017e 77427206  AQW = $29 = $14 ADD 0000009c               aqw_add     vb,r14,156
C 0000017f 00000043* LINK = 00000040                            long_ld     wq,_task_3
C 00000180 f7c03705* WQ = $31 = LINK OR 0000000d        
C 00000181 68c00305  $3 = $13 OR 00000000                       ld          r3,r13
C 00000182 61000305  $4 = $12 OR 00000000                       ld          r4,r12
C 00000183 00000003* LINK = 00000000                            long_call   _init_tasks_priority
C 00000184 f0000308* CALL LINK OR 00000000              
C 00000185 87403206  AQW = $29 = $16 ADD 0000000c               aqw_add     vb,r16,12
C 00000186 6fc00305  WQ = $31 = $13 OR 00000000                 ld          wq,r13
C 00000187 87404206  AQW = $29 = $16 ADD 00000010               aqw_add     vb,r16,16
C 00000188 67c00305  WQ = $31 = $12 OR 00000000                 ld          wq,r12
C 00000189 6f455207  AQR = $29 = $13 ADD 00000154               aqr_add     vb,r13,340
C 0000018a e8c0c205  $3 = RQ ADD 00000030                       add         r3,rq,48
C 0000018b 58000308  CALL $11 OR 00000000                       call        r11
C 0000018c 00c09a05  $3 = $0 ADD 00000026                       ld          r3,38
C 0000018d 58000308  CALL $11 OR 00000000                       call        r11
C 0000018e 00c02a05  $3 = $0 ADD 0000000a                       ld          r3,10
C 0000018f 58000308  CALL $11 OR 00000000                       call        r11
C 00000190 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 00000191 ea400305  $9 = RQ OR 00000000                        ld          r9,rq
C 00000192 e7401207  AQR = $29 = $28 ADD 00000004               aqr_add     vb,sp,4
C 00000193 ea800305  $10 = RQ OR 00000000                       ld          r10,rq
C 00000194 e7402207  AQR = $29 = $28 ADD 00000008               aqr_add     vb,sp,8
C 00000195 eac00305  $11 = RQ OR 00000000                       ld          r11,rq
C 00000196 e7403207  AQR = $29 = $28 ADD 0000000c               aqr_add     vb,sp,12
C 00000197 eb000305  $12 = RQ OR 00000000                       ld          r12,rq
C 00000198 e7404207  AQR = $29 = $28 ADD 00000010               aqr_add     vb,sp,16
C 00000199 eb400305  $13 = RQ OR 00000000                       ld          r13,rq
C 0000019a e7405207  AQR = $29 = $28 ADD 00000014               aqr_add     vb,sp,20
C 0000019b eb800305  $14 = RQ OR 00000000                       ld          r14,rq
C 0000019c e7406207  AQR = $29 = $28 ADD 00000018               aqr_add     vb,sp,24
C 0000019d ebc00305  $15 = RQ OR 00000000                       ld          r15,rq
C 0000019e e7407207  AQR = $29 = $28 ADD 0000001c               aqr_add     vb,sp,28
C 0000019f ec000305  $16 = RQ OR 00000000                       ld          r16,rq
C 000001a0 e700b207  AQR = $28 = $28 ADD 0000002c               aqr_add     sp,sp,44
C 000001a1 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 000001a2 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _init_tasks, .-_init_tasks
                                                                .data
D 00000000                                              .LC0:
D 00000000 50  72  6f  63                                       .string "Processor1"
D 00000004 65  73  73  6f                               
D 00000008 72  31  00                                   
                                                                .code
                                                                .alignw 1
                                                                .globl  _mc_main
                                                                .type   _mc_main, @function
C 000001a3                                              _mc_main:
C 000001a3 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 000001a4 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 000001a5 e7001245  $28 = $28 SUB 00000004                     sub         sp,sp,4
C 000001a6 e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 000001a7 4fc00305  WQ = $31 = $9 OR 00000000                  ld          wq,r9
C 000001a8 07400a07  AQR = $29 = $0 ADD 00000002                aqr_ld      vb,2
C 000001a9 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000001aa 08540300  $1 = $1 OR 00000000 LSR 10                 lsr         r1,r1,10
C 000001ab 08403e85  $1 = $1 AND 0000000f                       and         r1,r1,15
C 000001ac 00800a05  $2 = $0 ADD 00000002                       ld          r2,2
C 000001ad 0f400845  $29 = $1 SUB $2                            sub         vb,r1,r2
C 000001ae f8001a0a  JZ PC ADD 00000006                         jz          .L51
C 000001af e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 000001b0 ea400305  $9 = RQ OR 00000000                        ld          r9,rq
C 000001b1 e7001207  AQR = $28 = $28 ADD 00000004               aqr_add     sp,sp,4
C 000001b2 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 000001b3 e800030c  J RQ OR 00000000                           j           rq
C 000001b4                                              .L51:
C 000001b4 00000003* LINK = 00000000                            long_ld     r3,.LC0
C 000001b5 f0c00305* $3 = LINK OR 00000000              
C 000001b6 00000003* LINK = 00000000                            long_call   _new_processor
C 000001b7 f0000308* CALL LINK OR 00000000              
C 000001b8 00000003* LINK = 00000000                            aqw_long_ld vb,_s_processor
C 000001b9 f7400306* AQW = $29 = LINK OR 00000000       
C 000001ba 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 000001bb 00000023* LINK = 00000020                            long_ld     r3,_names
C 000001bc f0c01305* $3 = LINK OR 00000004              
C 000001bd 01000e05  $4 = $0 ADD 00000003                       ld          r4,3
C 000001be 00000003* LINK = 00000000                            long_call   _new_tasks
C 000001bf f0000308* CALL LINK OR 00000000              
C 000001c0 00000003* LINK = 00000000                            aqw_long_ld vb,_s_tasks
C 000001c1 f7401306* AQW = $29 = LINK OR 00000004       
C 000001c2 0fc00305  WQ = $31 = $1 OR 00000000                  ld          wq,r1
C 000001c3 00000003* LINK = 00000000                            long_ld     r9,_putchar
C 000001c4 f2400305* $9 = LINK OR 00000000              
C 000001c5 0f401207  AQR = $29 = $1 ADD 00000004                aqr_add     vb,r1,4
C 000001c6 e8c0c205  $3 = RQ ADD 00000030                       add         r3,rq,48
C 000001c7 48000308  CALL $9 OR 00000000                        call        r9
C 000001c8 00000003* LINK = 00000000                            aqr_long_ld vb,_s_tasks
C 000001c9 f7401307* AQR = $29 = LINK OR 00000004       
C 000001ca e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000001cb 0f42b207  AQR = $29 = $1 ADD 000000ac                aqr_add     vb,r1,172
C 000001cc e8c0c205  $3 = RQ ADD 00000030                       add         r3,rq,48
C 000001cd 48000308  CALL $9 OR 00000000                        call        r9
C 000001ce 00000003* LINK = 00000000                            aqr_long_ld vb,_s_tasks
C 000001cf f7401307* AQR = $29 = LINK OR 00000004       
C 000001d0 e8400305  $1 = RQ OR 00000000                        ld          r1,rq
C 000001d1 0f455207  AQR = $29 = $1 ADD 00000154                aqr_add     vb,r1,340
C 000001d2 e8c0c205  $3 = RQ ADD 00000030                       add         r3,rq,48
C 000001d3 48000308  CALL $9 OR 00000000                        call        r9
C 000001d4 00000003* LINK = 00000000                            aqr_long_ld vb,_s_processor
C 000001d5 f7400307* AQR = $29 = LINK OR 00000000       
C 000001d6 e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 000001d7 00000003* LINK = 00000000                            aqr_long_ld vb,_s_tasks
C 000001d8 f7401307* AQR = $29 = LINK OR 00000004       
C 000001d9 e9000305  $4 = RQ OR 00000000                        ld          r4,rq
C 000001da 01400e05  $5 = $0 ADD 00000003                       ld          r5,3
C 000001db 00000123* LINK = 00000120                            long_call   _init_tasks
C 000001dc f0002308* CALL LINK OR 00000008              
C 000001dd 00000003* LINK = 00000000                            aqw_long_ld vb,_wait_after_done
C 000001de f7403306* AQW = $29 = LINK OR 0000000c       
C 000001df 07c00605  WQ = $31 = $0 ADD 00000001                 ld          wq,1
C 000001e0 00000003* LINK = 00000000                            long_ld     r3,_isr
C 000001e1 f0c00305* $3 = LINK OR 00000000              
C 000001e2 00000003* LINK = 00000000                            long_call   _set_handlerR
C 000001e3 f0000308* CALL LINK OR 00000000              
C 000001e4 00989683  LINK = 00989680                            long_ld     r3,10000000
C 000001e5 f0c00305  $3 = LINK OR 00000000              
C 000001e6 00000003* LINK = 00000000                            long_call   _set_timerInterval
C 000001e7 f0000308* CALL LINK OR 00000000              
C 000001e8 00c19a05  $3 = $0 ADD 00000066                       ld          r3,102
C 000001e9 48000308  CALL $9 OR 00000000                        call        r9
C 000001ea 00c000c5  $3 = $0 ANDN $0                            ld          r3,0
C 000001eb 00000003* LINK = 00000000                            long_call   _set_mask
C 000001ec f0000308* CALL LINK OR 00000000              
C 000001ed                                              .L49:
C 000001ed f800020c  J PC ADD 00000000                          j           .L49
                                                                .size   _mc_main, .-_mc_main
                                                                .globl  _CLOCK_TO_MS
                                                                .data
                                                                .alignw 1
                                                                .type   _CLOCK_TO_MS, @object
                                                                .size   _CLOCK_TO_MS, 4
D 0000000c                                              _CLOCK_TO_MS:
D 0000000c 00989680                                             .long   10000000
                                                                .globl  _names
D 00000010                                              .LC1:
D 00000010 74  61  73  6b                                       .string "task1"
D 00000014 31  00                                       
D 00000016                                              .LC2:
D 00000016 74  61                                               .string "task2"
D 00000018 73  6b  32  00                               
D 0000001c                                              .LC3:
D 0000001c 74  61  73  6b                                       .string "task3"
D 00000020 33  00                                       
                                                                .data
                                                                .alignw 1
                                                                .type   _names, @object
                                                                .size   _names, 12
D 00000024                                              _names:
D 00000024 00000010*                                            .long   .LC1
D 00000028 00000016*                                            .long   .LC2
D 0000002c 0000001c*                                            .long   .LC3
                                                                .local  _wait_after_done
                                                                .comm   _wait_after_done,4,4
                                                                .local  _timer
                                                                .comm   _timer,4,4
                                                                .local  _s_processor
                                                                .comm   _s_processor,4,4
                                                                .local  _s_tasks
                                                                .comm   _s_tasks,4,4
                                                                .ident  "GCC: (GNU) 4.3.3"

assume   $0 = 00000000

                        .data + 00000030     .
                        .text + 0000004a     .L13
                        .text + 00000057     .L15
                        .text + 00000077     .L17
                        .text + 00000072     .L20
                        .text + 00000082     .L22
                        .text + 000000a2     .L24
                        .text + 0000009d     .L27
                        .text + 000000c6     .L30
                        .text + 000000c1     .L32
                        .text + 000000f3     .L34
                        .text + 0000010f     .L36
                        .text + 00000104     .L37
                        .text + 00000112     .L38
                        .text + 0000011d     .L39
                        .text + 00000178     .L43
                        .text + 00000160     .L44
                        .text + 000001ed     .L49
                        .text + 000001b4     .L51
                        .text + 00000037     .L7
                        .text + 00000028     .L8
                        .text + 0000003a     .L9
                        .data + 00000000     .LC0
                        .data + 00000010     .LC1
                        .data + 00000016     .LC2
                        .data + 0000001c     .LC3
                             <undefined>  E  ___divsi3
                             <undefined>  E  ___modsi3
                             <undefined>  E  ___umodsi3
                        .data + 0000000c  G  _CLOCK_TO_MS
                        .text + 00000128  G  _init_tasks
                             <undefined>  E  _init_tasks_priority
                             <undefined>  E  _isr
                        .text + 00000000  G  _mc_init
                        .text + 000001a3  G  _mc_main
                        .data + 00000024  G  _names
                             <undefined>  E  _new_processor
                             <undefined>  E  _new_tasks
                             <undefined>  E  _putchar
                             <undefined>  E  _puts
                        .text + 0000000e  G  _reverse_integer
                             <undefined>  E  _rm_schedule
                         .bss + 00000000     _s_processor
                         .bss + 00000004     _s_tasks
                        .text + 000000c7  G  _schedule
                             <undefined>  E  _set_handlerR
                             <undefined>  E  _set_mask
                             <undefined>  E  _set_timerInterval
                        .text + 000000a3  G  _task_1
                        .text + 00000078  G  _task_2
                        .text + 0000004d  G  _task_3
                             <undefined>  E  _task_done
                        .text + 00000005  G  _test_func_execute_time
                         .bss + 00000008     _timer
                         .bss + 0000000c     _wait_after_done
                                00000000     code.rota
                                00000001     code.step
                                00000002     data.rota
                                00000004     data.step
                                     $23     fp
                                    link     link
                                     $27     p1
                                      pc     pc
                                      $1     r1
                                     $10     r10
                                     $11     r11
                                     $12     r12
                                     $13     r13
                                     $14     r14
                                     $15     r15
                                     $16     r16
                                     $17     r17
                                     $18     r18
                                     $19     r19
                                      $2     r2
                                     $20     r20
                                     $21     r21
                                     $22     r22
                                      $3     r3
                                      $4     r4
                                      $5     r5
                                      $6     r6
                                      $7     r7
                                      $8     r8
                                      $9     r9
                                      rq     rq
                                     $28     sp
                                     $24     t1
                                     $25     t2
                                     $26     t3
                                     $29     vb
                                      $0     void
                                      wq     wq
                                      $0     zero
